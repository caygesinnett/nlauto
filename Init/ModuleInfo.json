[
  [
    "N/action",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "action.Action",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates a NetSuite record action."
          },
          {
            "Name": "Plain JavaScript Object",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A plain JavaScript object of actions available for a record type.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "action.execute(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes the record action and returns action results in an object."
          },
          {
            "Name": "action.execute.promise(options)",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Asynchronously executes the record action and returns the action results in an object.",
            "Member Type": "Method"
          },
          {
            "Name": "action.executeBulk(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes an asynchronous bulk record action and returns its task ID for later status inquiry.",
            "Member Type": "Method"
          },
          {
            "Name": "action.find(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a plain JavaScript object of available record actions for the given record type.",
            "Member Type": "Method"
          },
          {
            "Name": "action.find.promise(options)",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Asynchronously returns a plain JavaScript object of available record actions for the given record type.",
            "Member Type": "Method"
          },
          {
            "Name": "action.get(options)",
            "Return Type / Value Type": "action.Action",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns an executable record action for the given record type.",
            "Member Type": "Method"
          },
          {
            "Name": "action.get.promise(options)",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Asynchronously returns an executable record action for the given record type.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "action.Action",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates a NetSuite record action."
          },
          {
            "Name": "Plain JavaScript Object",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A plain JavaScript object of actions available for a record type.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "action.execute(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes the record action and returns action results in an object."
          },
          {
            "Name": "action.execute.promise(options)",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Asynchronously executes the record action and returns the action results in an object.",
            "Member Type": "Method"
          },
          {
            "Name": "action.executeBulk(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes an asynchronous bulk record action and returns its task ID for later status inquiry.",
            "Member Type": "Method"
          },
          {
            "Name": "action.find(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a plain JavaScript object of available record actions for the given record type.",
            "Member Type": "Method"
          },
          {
            "Name": "action.find.promise(options)",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Asynchronously returns a plain JavaScript object of available record actions for the given record type.",
            "Member Type": "Method"
          },
          {
            "Name": "action.get(options)",
            "Return Type / Value Type": "action.Action",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns an executable record action for the given record type.",
            "Member Type": "Method"
          },
          {
            "Name": "action.get.promise(options)",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Asynchronously returns an executable record action for the given record type.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  ["N/auth", []],
  [
    "N/cache",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "cache.Cache",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cache which is a segment of memory that can be used to store data on a temporary, short-term basis."
          },
          {
            "Member Type": "Method",
            "Name": "cache.getCache(options)",
            "Return Type / Value Type": "cache.Cache",
            "Supported Script Types": "Server scripts",
            "Description": "Checks for a cache object with the specified name. If the cache object exists, this method returns it. If the cache object does not exist, the system creates and returns a new cache object."
          },
          {
            "Member Type": "Enum",
            "Name": "cache.Scope",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values that describe the availability of the cache. Use this enum to set the value of the Cache.scope property and the options.scope parameter of the cache.getCache(options) method."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "cache.Cache",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cache which is a segment of memory that can be used to store data on a temporary, short-term basis."
          },
          {
            "Member Type": "Method",
            "Name": "cache.getCache(options)",
            "Return Type / Value Type": "cache.Cache",
            "Supported Script Types": "Server scripts",
            "Description": "Checks for a cache object with the specified name. If the cache object exists, this method returns it. If the cache object does not exist, the system creates and returns a new cache object."
          },
          {
            "Member Type": "Enum",
            "Name": "cache.Scope",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values that describe the availability of the cache. Use this enum to set the value of the Cache.scope property and the options.scope parameter of the cache.getCache(options) method."
          }
        ]
      }
    ]
  ],
  [
    "N/certificateControl",
    [
      {
        "Name": "N/certificateControl",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "certificateControl.Certificate",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a digital certificate record."
          },
          {
            "Member Type": "Method",
            "Name": "certificateControl.findCertificates(options)",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Server scripts",
            "Description": "Returns metadata about the certificate(s)."
          },
          {
            "Name": "certificateControl.findUsages(options)",
            "Return Type / Value Type": "object[]",
            "Supported Script Types": "Server scripts",
            "Description": "Returns an audit trail of how a certificate has been used. Includes operations performed with time stamps.",
            "Member Type": "Method"
          },
          {
            "Name": "certificateControl.createCertificate(options)",
            "Return Type / Value Type": "certificateControl.Certificate",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a certificate record using a file from the File Cabinet. After saving with Certificate.save(), the certificate is accessible on the Certificates.",
            "Member Type": "Method"
          },
          {
            "Name": "certificateControl.deleteCertificate(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Deletes a certificate record that has been uploaded to the Certificates list in the UI or created using certificateControl.createCertificate(options) and saved with Certificate.save().",
            "Member Type": "Method"
          },
          {
            "Name": "certificateControl.loadCertificate(options)",
            "Return Type / Value Type": "certificateControl.Certificate",
            "Supported Script Types": "Server scripts",
            "Description": "Loads a certificate record that has been uploaded to the Certificates list in the UI or created using certificateControl.createCertificate(options).",
            "Member Type": "Method"
          },
          {
            "Name": "certificateControl.lock(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Locks a certificate record so that it cannot be edited.",
            "Member Type": "Method"
          },
          {
            "Name": "certificateControl.unlock(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Unlocks a certificate record that has been locked with certificateControl.lock(options).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "certificateControl.Operation",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the operation when searching for certificates with certificateControl.findUsages(options)."
          },
          {
            "Name": "certificateControl.Operator",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for search operators to use with the name and description parameters of the certificateControl.findCertificates(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "certificateControl.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the certificate file type to use with the type parameter of the certificateControl.findCertificates(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Certificate.save()",
            "Return Type / Value Type": "object containing the script ID of the new certificate record",
            "Supported Script Types": "Server scripts",
            "Description": "Saves a certificate record."
          },
          {
            "Member Type": "Property",
            "Name": "Certificate.description",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the certificate record."
          },
          {
            "Name": "Certificate.file",
            "Return Type / Value Type": "File Object Members object",
            "Supported Script Types": "Server scripts",
            "Description": "Includes the properties of the file uploaded to create the certificate.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.monthReminder",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "The setting of the Month box for Expiration Reminders on the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.notifications",
            "Return Type / Value Type": "number[]",
            "Supported Script Types": "Server scripts",
            "Description": "The internal IDs of the employees selected in the Copy Employees field on the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.password",
            "Return Type / Value Type": "string (write-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The password for the digital certificate. You can create a GUID for the password using Form.addSecretKeyField(options) or you can create an API secret for the secret at Setup > Company > API Secrets.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.restrictions",
            "Return Type / Value Type": "number[]",
            "Supported Script Types": "Server scripts",
            "Description": "The internal IDs of the employees selected in the Restrict to Employees field of the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.scriptId",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.subsidiaries",
            "Return Type / Value Type": "number[]",
            "Supported Script Types": "Server scripts",
            "Description": "The internal IDs of the subsidiaries associated with the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.threeMonthsReminder",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates the setting of the 3 Months box for Expiration Reminders on the certificate record.",
            "Member Type": "Property"
          },
          {
            "Name": "Certificate.weekReminder",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates the setting of the Week box for Expiration Reminders on the certificate record.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  ["N/commerces", []],
  [
    "N/compress",
    [
      {
        "Name": "N/compress",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "compress.Archiver",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The functionality for creating archive files.\n                    Use compress.createArchiver() to create this object."
          },
          {
            "Member Type": "Method",
            "Name": "compress.createArchiver()",
            "Return Type / Value Type": "compress.Archiver",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a compress.Archiver object."
          },
          {
            "Name": "compress.gunzip(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Decompresses a file and returns it as a temporary file object.",
            "Member Type": "Method"
          },
          {
            "Name": "compress.gzip(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Compresses a file and returns it as a temporary file object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "compress.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the archive types.\n                    Use this enum to set the value of the type parameter of the method Archiver.archive(options)."
          }
        ]
      },
      {
        "Name": "Archiver",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Archiver.add(options)",
            "Return Type/Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Adds a file to be archived."
          },
          {
            "Name": "Archiver.archive(options)",
            "Return Type/Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an archive with the added files and returns it as a temporary file object.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/config",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "config.load(options)",
            "Return Type / Value Type": "record.Record",
            "Supported Script Types": "Server scripts",
            "Description": "Loads a record.Record object that encapsulates the specified configuration page."
          },
          {
            "Member Type": "Enum",
            "Name": "config.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported configuration objects. Use this enum to set the value of the NetSuite configuration page you want to access in the config.load(options) method."
          }
        ]
      }
    ]
  ],
  [
    "N/crypto",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "crypto.Cipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher."
          },
          {
            "Name": "crypto.CipherPayload",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a cipher payload.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Decipher",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a decipher.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hash",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a hash.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.Hmac",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an hmac.",
            "Member Type": "Object"
          },
          {
            "Name": "crypto.SecretKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a secret key handle.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "crypto.checkPasswordField(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Checks whether a password in a record corresponds to the password entered by the user."
          },
          {
            "Name": "crypto.createCipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Cipher Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createDecipher(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Decipher object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHash(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hash Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createHmac(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.Hmac Object.",
            "Member Type": "Method"
          },
          {
            "Name": "crypto.createSecretKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates and returns a new crypto.SecretKey Object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "crypto.EncryptionAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported encryption algorithms. Use this enum to set the options.algorithm parameter for crypto.createCipher(options)."
          },
          {
            "Name": "crypto.HashAlg",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported hashing algorithms. Use this enum to set the options.algorithm parameter for crypto.createHash(options) and crypto.createHmac(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "crypto.Padding",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported cipher padding. Use this enum to set the options.padding parameter for crypto.createCipher(options) and crypto.createDecipher(options).",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/crypto/certificate",
    [
      {
        "Name": "N/crypto/certificate",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "certificate.SignedXml",
            "Return Type/Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an XML string that has been digitally signed.\n                    Use certificate.signXml(options) to create this object."
          },
          {
            "Name": "certificate.Signer",
            "Return Type/Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a created signature (signer) for plain strings.\n                    Use certificate.createSigner(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Name": "certificate.Verifier",
            "Return Type/Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a created verifier for verifying plain string signatures.\n                    Use certificate.createVerifier(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "certificate.createSigner(options)",
            "Return Type/Value Type": "certificate.Signer",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a certificate.Signer object for signing plain strings."
          },
          {
            "Name": "certificate.createVerifier(options)",
            "Return Type/Value Type": "certificate.Verifier",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a certificate.Verifier object for verifying signatures of plain strings.",
            "Member Type": "Method"
          },
          {
            "Name": "certificate.signXml(options)",
            "Return Type/Value Type": "certificate.SignedXml",
            "Supported Script Types": "Server scripts",
            "Description": "Signs the input XML string using the Certificate ID. Returns the certificate.SignedXml as a string.\n                    \n                      Note: \n                      Formatting, such as line breaks, is disabled in signatures.",
            "Member Type": "Method"
          },
          {
            "Name": "certificate.verifyXmlSignature(options)",
            "Return Type/Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Verifies the signature in the SignedXml.asFile() file.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "certificate.HashAlg",
            "Return Type/Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for hash algorithm types.\n                    Use this enum to set the option.algorithm property values for the certificate.createSigner(options), certificate.createVerifier(options), certificate.signXml(options) methods."
          }
        ]
      },
      {
        "Name": "SignedXml",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "SignedXml.asFile()",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the signed XML as a file object."
          },
          {
            "Name": "SignedXml.asString()",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the signed XML as a string.",
            "Member Type": "Method"
          },
          {
            "Name": "SignedXml.asXml()",
            "Return Type / Value Type": "xml.Document",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the signed XML as an XML document. You can use the N/xml Module with this document to access elements and attributes in the XML.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "Signer",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Signer.sign(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Signs the string and returns the signature."
          },
          {
            "Name": "Signer.update(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Updates the input string to be signed. The string can be encoded.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "Verifier",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Verifier.update(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Updates the string to be verified against specified certificate."
          },
          {
            "Name": "Verifier.verify(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Verifies the string against a provided signature using specified certificate.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/crypto/random",
    [
      {
        "Name": "N/crypto/random",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "random.generateBytes(options)",
            "Return Type / Value Type": "Uint8Array",
            "Supported Script Types": "Client and server scripts",
            "Description": "Generates cryptographically strong pseudorandom set of bytes."
          },
          {
            "Name": "random.generateInt(options)",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Method used to generate cryptographically strong pseudorandom number.",
            "Member Type": "Method"
          },
          {
            "Name": "random.generateUUID()",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Method used to generate a v4 Universally Unique Identifier using a cryptographically secure random number generator.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/currency",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "currency.exchangeRate(options)",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns an exchange rate between two currencies."
          }
        ]
      }
    ]
  ],
  [
    "N/currentRecord",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "currentRecord.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Encapsulates a column of a sublist on the current record."
          },
          {
            "Name": "currentRecord.CurrentRecord",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents the record active on the current page.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a body or sublist field.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a sublist.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "currentRecord.get()",
            "Return Type / Value Type": "currentRecord.CurrentRecord",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a record object that represents the current record."
          },
          {
            "Name": "currentRecord.get.promise()",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a promise for an object that represents the current record.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "currentRecord.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Encapsulates a column of a sublist on the current record."
          },
          {
            "Name": "currentRecord.CurrentRecord",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents the record active on the current page.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a body or sublist field.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a sublist.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "currentRecord.get()",
            "Return Type / Value Type": "currentRecord.CurrentRecord",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a record object that represents the current record."
          },
          {
            "Name": "currentRecord.get.promise()",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a promise for an object that represents the current record.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "currentRecord.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Encapsulates a column of a sublist on the current record."
          },
          {
            "Name": "currentRecord.CurrentRecord",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents the record active on the current page.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a body or sublist field.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a sublist.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "currentRecord.get()",
            "Return Type / Value Type": "currentRecord.CurrentRecord",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a record object that represents the current record."
          },
          {
            "Name": "currentRecord.get.promise()",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a promise for an object that represents the current record.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "currentRecord.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Encapsulates a column of a sublist on the current record."
          },
          {
            "Name": "currentRecord.CurrentRecord",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents the record active on the current page.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a body or sublist field.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a sublist.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "currentRecord.get()",
            "Return Type / Value Type": "currentRecord.CurrentRecord",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a record object that represents the current record."
          },
          {
            "Name": "currentRecord.get.promise()",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a promise for an object that represents the current record.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "currentRecord.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Encapsulates a column of a sublist on the current record."
          },
          {
            "Name": "currentRecord.CurrentRecord",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents the record active on the current page.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a body or sublist field.",
            "Member Type": "Object"
          },
          {
            "Name": "currentRecord.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client scripts",
            "Description": "Represents a sublist.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "currentRecord.get()",
            "Return Type / Value Type": "currentRecord.CurrentRecord",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a record object that represents the current record."
          },
          {
            "Name": "currentRecord.get.promise()",
            "Return Type / Value Type": "Promise",
            "Supported Script Types": "Client scripts",
            "Description": "Retrieves a promise for an object that represents the current record.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/dataset",
    [
      {
        "Name": "N/dataset",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "dataset.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A column in the dataset, which usually represents a record field."
          },
          {
            "Name": "dataset.Condition",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A condition or set of conditions to apply to a column.",
            "Member Type": "Object"
          },
          {
            "Name": "dataset.Dataset",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A representation of the entire dataset, including columns, conditions, and joins.",
            "Member Type": "Object"
          },
          {
            "Name": "dataset.Join",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A joined record used in the dataset.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "dataset.create(options)",
            "Return Type / Value Type": "dataset.Dataset",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a dataset."
          },
          {
            "Name": "dataset.createColumn(options)",
            "Return Type / Value Type": "dataset.Column",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a dataset column.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.createCondition(options)",
            "Return Type / Value Type": "dataset.Condition",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a dataset condition (criteria). A condition is applied to a dataset column and includes an operator.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.createJoin(options)",
            "Return Type / Value Type": "dataset.Join",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a dataset join.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.createTranslation(options)",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a translation expression based on a Translation Collection.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.describe(options)",
            "Return Type / Value Type": "Object[]",
            "Supported Script Types": "Server scripts",
            "Description": "Retrieves descriptive information about a dataset, including name, description, and a list of columns or formulas with their labels and types.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.describe.promise(options)",
            "Return Type / Value Type": "Promise Object",
            "Supported Script Types": "Server scripts",
            "Description": "Asynchronously retrieves descriptive information about a dataset, including name, description, and a list of columns or formulas with their labels and types..",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.list()",
            "Return Type / Value Type": "Object[]",
            "Supported Script Types": "Server scripts",
            "Description": "Lists all existing datasets.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.listPaged(options)",
            "Return Type / Value Type": "PagedInfoData",
            "Supported Script Types": "Server scripts",
            "Description": "Returns metadata about datasets as a set of paged results.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.loadDataset(options)",
            "Return Type / Value Type": "dataset.Dataset",
            "Supported Script Types": "Server scripts",
            "Description": "Loads an existing dataset.",
            "Member Type": "Method"
          },
          {
            "Name": "dataset.loadDataset.promise(options)",
            "Return Type / Value Type": "Promise Object",
            "Supported Script Types": "Server scripts",
            "Description": "Asynchronously loads an existing dataset.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "Column",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Column.alias",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The alias of the column."
          },
          {
            "Name": "Column.fieldId",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the record field associated with the column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.formula",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The formula of the column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.id",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Server Scripts",
            "Description": "The ID of the column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.join",
            "Return Type / Value Type": "dataset.Join (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The join for the column. Used only when the column is from a joined record.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.label",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The label of the column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.type",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The return type of the formula.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Condition",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Condition.caseSensitive",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates whether the condition in a sort is case sensitive."
          },
          {
            "Name": "Condition.children",
            "Return Type / Value Type": "dataset.Condition[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The children of the condition (for example, subconditions AND’d or OR’d).",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.column",
            "Return Type / Value Type": "dataset.Column (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The column on which the condition is placed.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.operator",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The operator of the condition.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.values",
            "Return Type / Value Type": "string[] | number[] | boolean[] | Date[] | Object[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The values for the condition.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Dataset",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Dataset.getExpressionFromColumn(options)",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "Returns an expression which can be used in a workbook."
          },
          {
            "Name": "Dataset.run()",
            "Return Type / Value Type": "query.ResultSet",
            "Supported Script Types": "Server scripts",
            "Description": "Executes the dataset and returns the result set (the same as in N/query Module).",
            "Member Type": "Method"
          },
          {
            "Name": "Dataset.run.promise()",
            "Return Type / Value Type": "Promise Object",
            "Supported Script Types": "Server scripts",
            "Description": "Asynchronously executes the dataset and returns the result set (the same as in N/query Module).",
            "Member Type": "Method"
          },
          {
            "Name": "Dataset.runPaged(options)",
            "Return Type / Value Type": "query.PagedData",
            "Supported Script Types": "Server scripts",
            "Description": "Executes the dataset and returns the result set in paginated data form (the same as in N/query Module).",
            "Member Type": "Method"
          },
          {
            "Name": "Dataset.save(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Saves a dataset.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "Dataset.columns",
            "Return Type / Value Type": "dataset.Column[]",
            "Supported Script Types": "Server scripts",
            "Description": "The columns in the dataset."
          },
          {
            "Name": "Dataset.condition",
            "Return Type / Value Type": "dataset.Condition",
            "Supported Script Types": "Server scripts",
            "Description": "The condition (criteria) for the entire dataset.",
            "Member Type": "Property"
          },
          {
            "Name": "Dataset.description",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The description of the dataset.",
            "Member Type": "Property"
          },
          {
            "Name": "Dataset.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the dataset.",
            "Member Type": "Property"
          },
          {
            "Name": "Dataset.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the dataset.",
            "Member Type": "Property"
          },
          {
            "Name": "Dataset.type",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The internal ID for the base record type for the dataset.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Join",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Join.fieldId",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the field on which the join is performed."
          },
          {
            "Name": "Join.join",
            "Return Type / Value Type": "dataset.Join (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The child join, if the join is a multilevel join.",
            "Member Type": "Property"
          },
          {
            "Name": "Join.source",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The internal ID for the source record type of the join.",
            "Member Type": "Property"
          },
          {
            "Name": "Join.target",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The polymorphic target of the join.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  [
    "N/email",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "email.send(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client and server scripts",
            "Description": "Sends transactional email to an individual or group of recipients and receives bounceback notifications.\n                  \n                    Note: \n                    To send email on another user’s behalf, the user triggering the email send must have a role with the Vicarious Email (ADMI_VICARIOUS_EMAIL) permission. If a user without this permission executes SuiteScript that sends email, a Permission Violation error is returned."
          },
          {
            "Name": "email.send.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Sends transactional email asynchronously to an individual or group of recipients and receives bounceback notifications.",
            "Member Type": "Method"
          },
          {
            "Name": "email.sendBulk(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client and server scripts",
            "Description": "Sends bulk email (for use when a bounceback notification is not required).",
            "Member Type": "Method"
          },
          {
            "Name": "email.sendBulk.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Sends bulk email asynchronously (for use when a bounceback notification is not required).",
            "Member Type": "Method"
          },
          {
            "Name": "email.sendCampaignEvent(options)",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Sends a single “on-demand” campaign email to a specified recipient and return a campaign response ID.",
            "Member Type": "Method"
          },
          {
            "Name": "email.sendCampaignEvent.promise(options)",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Sends a single “on-demand” campaign email asynchronously to a specified recipient and return a campaign response ID.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/encode",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "encode.convert(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Converts a string to another type of encoding and returns the re-encoded string."
          },
          {
            "Member Type": "Enum",
            "Name": "encode.Encoding",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the supported character set encoding. Use this enum to set the inputEncoding and outputEncoding parameter values in N/crypto Module or N/encode Module."
          }
        ]
      }
    ]
  ],
  [
    "N/error",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "error.SuiteScriptError",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts that are not user event scripts",
            "Description": "Encapsulates a custom SuiteScript error for any server script type that is not a user event script."
          },
          {
            "Member Type": "Method",
            "Name": "error.create(options)",
            "Return Type / Value Type": "error.SuiteScriptError",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a new error.SuiteScriptError object."
          },
          {
            "Member Type": "Enum",
            "Name": "error.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for error types.\n                  Use this enum to set the value for the SuiteScriptError.type property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "error.SuiteScriptError",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts that are not user event scripts",
            "Description": "Encapsulates a custom SuiteScript error for any server script type that is not a user event script."
          },
          {
            "Member Type": "Method",
            "Name": "error.create(options)",
            "Return Type / Value Type": "error.SuiteScriptError",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a new error.SuiteScriptError object."
          },
          {
            "Member Type": "Enum",
            "Name": "error.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for error types.\n                  Use this enum to set the value for the SuiteScriptError.type property."
          }
        ]
      }
    ]
  ],
  [
    "N/file",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "file.File",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a file within NetSuite."
          },
          {
            "Name": "file.Reader",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a reader that you can use to perform special read operations.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "file.copy(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Copies an existing file in the File Cabinet."
          },
          {
            "Name": "file.create(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a new file.File.",
            "Member Type": "Method"
          },
          {
            "Name": "file.delete(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Deletes an existing file.File from the NetSuite File Cabinet.",
            "Member Type": "Method"
          },
          {
            "Name": "file.load(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Loads an existing file.File from the NetSuite File Cabinet.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "file.Encoding",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds character encoding values for file contents.\n                  Use this enum to set the value of the File.encoding property."
          },
          {
            "Name": "file.NameConflictResolution",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds conflict resolution values that apply when copying a file.\n                  Use this enum to specify how to resolve conflicts when copying files and to set the value of the conflict resolution parameter in file.copy(options)",
            "Member Type": "Enum"
          },
          {
            "Name": "file.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds file type values.\n                  Use this enum to set the value of the File.fileType property.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "file.File",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a file within NetSuite."
          },
          {
            "Name": "file.Reader",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a reader that you can use to perform special read operations.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "file.copy(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Copies an existing file in the File Cabinet."
          },
          {
            "Name": "file.create(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a new file.File.",
            "Member Type": "Method"
          },
          {
            "Name": "file.delete(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Deletes an existing file.File from the NetSuite File Cabinet.",
            "Member Type": "Method"
          },
          {
            "Name": "file.load(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Loads an existing file.File from the NetSuite File Cabinet.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "file.Encoding",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds character encoding values for file contents.\n                  Use this enum to set the value of the File.encoding property."
          },
          {
            "Name": "file.NameConflictResolution",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds conflict resolution values that apply when copying a file.\n                  Use this enum to specify how to resolve conflicts when copying files and to set the value of the conflict resolution parameter in file.copy(options)",
            "Member Type": "Enum"
          },
          {
            "Name": "file.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds file type values.\n                  Use this enum to set the value of the File.fileType property.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "file.File",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a file within NetSuite."
          },
          {
            "Name": "file.Reader",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a reader that you can use to perform special read operations.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "file.copy(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Copies an existing file in the File Cabinet."
          },
          {
            "Name": "file.create(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a new file.File.",
            "Member Type": "Method"
          },
          {
            "Name": "file.delete(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Deletes an existing file.File from the NetSuite File Cabinet.",
            "Member Type": "Method"
          },
          {
            "Name": "file.load(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Loads an existing file.File from the NetSuite File Cabinet.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "file.Encoding",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds character encoding values for file contents.\n                  Use this enum to set the value of the File.encoding property."
          },
          {
            "Name": "file.NameConflictResolution",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds conflict resolution values that apply when copying a file.\n                  Use this enum to specify how to resolve conflicts when copying files and to set the value of the conflict resolution parameter in file.copy(options)",
            "Member Type": "Enum"
          },
          {
            "Name": "file.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds file type values.\n                  Use this enum to set the value of the File.fileType property.",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/format",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "format.format(options)",
            "Return Type / Value Type": "string | Date",
            "Supported Script Types": "Client and server scripts",
            "Description": "Takes a raw value and returns a formatted value.\n                  \n                    Note: \n                    This method is overloaded when you format a datetime or datetimetz value."
          },
          {
            "Name": "format.parse(options)",
            "Return Type / Value Type": "Date | string | number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Takes a formatted value and returns a raw value.\n                  \n                    Note: \n                    This method is overloaded when you format a datetime or datetimetz value.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "format.Timezone",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for supported time zone formats. Use this enum to set the value of the options.timezone parameter."
          },
          {
            "Name": "format.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported field types.\n                  Use this enum to set the value of the options.type parameter when calling format.format(options) or format.parse(options).",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/format/i18n",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "format.CurrencyFormatter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents the object that formats the number to currency string."
          },
          {
            "Name": "format.NumberFormatter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents the object that formats the number to string.",
            "Member Type": "Object"
          },
          {
            "Name": "format.PhoneNumberFormatter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents the object that formats the phone number to string.",
            "Member Type": "Object"
          },
          {
            "Name": "format.PhoneNumberParser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents the object that parses the string to phone number.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "format.spellOut(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a string containing the spelled-out version of the specified number in a specified locale."
          },
          {
            "Name": "format.getCurrencyFormatter(options)",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a format.CurrencyFormatter object to format numbers to currency strings.",
            "Member Type": "Method"
          },
          {
            "Name": "format.getNumberFormatter(options)",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a format.NumberFormatter object to format numbers to strings.",
            "Member Type": "Method"
          },
          {
            "Name": "format.getPhoneNumberFormatter(options)",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a format.PhoneNumberFormatter object to format phone numbers to strings.",
            "Member Type": "Method"
          },
          {
            "Name": "format.getPhoneNumberParser(options)",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Parses a phone number from a string. Returns a format.PhoneNumberParser object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "format.NegativeNumberFormat",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the values for the negative number format. Used to set the value of the options.negativeNumberFormatter parameter of the format.getNumberFormatter(options)."
          },
          {
            "Name": "format.Currency",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the values for the currency code. Used to set the value of the options.currency parameter of the format.getCurrencyFormatter(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "Currency Formatter",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "CurrencyFormatter.currency",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates the currency code."
          },
          {
            "Name": "CurrencyFormatter.locale",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "The locale of the currency formatter.",
            "Member Type": "Property"
          },
          {
            "Name": "CurrencyFormatter.symbol",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates the currency symbol.",
            "Member Type": "Property"
          },
          {
            "Name": "CurrencyFormatter.numberFormatter",
            "Return Type / Value Type": "object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Contains the format.NumberFormatter object derived from format.CurrencyFormatter with the same number formatting parameters without currency symbol.",
            "Member Type": "Property"
          },
          {
            "Name": "CurrencyFormatter.format(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Formats the number to the currency string.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Number Formatter",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "NumberFormatter.groupSeparator",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates the group separator."
          },
          {
            "Name": "NumberFormatter.decimalSeparator",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates the decimal separator.",
            "Member Type": "Property"
          },
          {
            "Name": "NumberFormatter.locale",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "The locale of the number formatter.",
            "Member Type": "Property"
          },
          {
            "Name": "NumberFormatter.precision",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates the precision.",
            "Member Type": "Property"
          },
          {
            "Name": "NumberFormatter.negativeNumberFormat",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates the negative number format.",
            "Member Type": "Property"
          },
          {
            "Name": "NumberFormatter.format(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Formats the number to string.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Phone Number Formatter",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "format.PhoneNumberFormatter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The object that formats the phone number to string."
          },
          {
            "Member Type": "Method",
            "Name": "PhoneNumberFormatter.format(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Formats phone number object to string."
          },
          {
            "Member Type": "Enum",
            "Name": "format.PhoneNumberFormatType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the values for the phone number format type. Used to set the value of the options.formatType parameter of the format.getPhoneNumberFormatter(options) method."
          },
          {
            "Name": "format.Country",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Hold the values for the countries. Used to set the value of the options.defaultCountry parameter in the format.getPhoneNumberParser(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Table": [
          {
            "Member Type": "Object",
            "Name": "format.PhoneNumberParser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The object that parses the string to phone number."
          },
          {
            "Member Type": "Method",
            "Name": "PhoneNumberParser.parse(options)",
            "Return Type / Value Type": "Object of type PhoneNumber",
            "Supported Script Types": "Client and server scripts",
            "Description": "Parses string to phone number."
          }
        ]
      }
    ]
  ],
  [
    "N/http",
    [
      {"Table": []},
      {"Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []}
    ]
  ],
  [
    "N/https",
    [
      {"Table": []},
      {"Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []},
      {"Name": "In ", "Table": []}
    ]
  ],
  [
    "N/https/clientCertificate",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "clientCertificate.post(options)",
            "Return Type/Value Type": "https.ClientResponse",
            "Supported Script Types": "Server scripts",
            "Description": "Sends a SSL secured POST request to a remote server."
          },
          {
            "Name": "clientCertificate.get(options)",
            "Return Type/Value Type": "https.ClientResponse",
            "Supported Script Types": "Server scripts",
            "Description": "Sends a SSL secured GET request to a remote server.",
            "Member Type": "Method"
          },
          {
            "Name": "clientCertificate.put(options)",
            "Return Type/Value Type": "https.ClientResponse",
            "Supported Script Types": "Server scripts",
            "Description": "Sends a SSL secured PUT request to a remote server.",
            "Member Type": "Method"
          },
          {
            "Name": "clientCertificate.delete(options)",
            "Return Type/Value Type": "https.ClientResponse",
            "Supported Script Types": "Server scripts",
            "Description": "Sends a SSL secured DELETE request to a remote server.",
            "Member Type": "Method"
          },
          {
            "Name": "clientCertificate.request(options)",
            "Return Type/Value Type": "https.ClientResponse",
            "Supported Script Types": "Server scripts",
            "Description": "Sends a SSL secured REQUEST request to a remote server.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/keyControl",
    [
      {
        "Name": "N/keyControl",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "keyControl.Key",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the key object."
          },
          {
            "Member Type": "Method",
            "Name": "keyControl.findKeys(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Searches and returns a list of keys based on criteria set. If no options are set for criteria, the full list of keys stored in NetSuite is returned."
          },
          {
            "Name": "keyControl.createKey(options)",
            "Return Type / Value Type": "keyControl.Key",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a key.",
            "Member Type": "Method"
          },
          {
            "Name": "keyControl.deleteKey(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Marks the key as deleted in database. The history is retained.",
            "Member Type": "Method"
          },
          {
            "Name": "keyControl.loadKey(options)",
            "Return Type / Value Type": "keyControl.Key",
            "Supported Script Types": "Server scripts",
            "Description": "Loads a key.",
            "Member Type": "Method"
          },
          {
            "Name": "keyControl.lock(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Locks a key so that it cannot be edited in the UI.",
            "Member Type": "Method"
          },
          {
            "Name": "keyControl.unlock(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Unlocks a key that has been locked by keyControl.lock(options).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "keyControl.Operator",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the key operators of keyControl.findKeys(options)."
          }
        ]
      },
      {
        "Name": "Key",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Key.file",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "File object of the key."
          },
          {
            "Name": "Key.password",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Password of the key (write-only).\n                    You can create a GUID using Form.addSecretKeyField(options). This property also accepts the script ID of an API secret stored at Setup > Company > API Secrets.",
            "Member Type": "Property"
          },
          {
            "Name": "Key.scriptId",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Script ID of the key. NetSuite prepends this ID with custkey.",
            "Member Type": "Property"
          },
          {
            "Name": "Key.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Name of the key.",
            "Member Type": "Property"
          },
          {
            "Name": "Key.description",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Description of the key.",
            "Member Type": "Property"
          },
          {
            "Name": "Key.restrictions",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The internal IDs of the employees selected in the Restrict to Employees field of the key record.",
            "Member Type": "Property"
          },
          {
            "Member Type": "Method",
            "Name": "Key.save()",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Saves the key."
          }
        ]
      }
    ]
  ],
  [
    "N/llm",
    [
      {
        "Name": "N/llm",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "llm.ChatMessage",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The chat message."
          },
          {
            "Name": "llm.Citation",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A citation returned from the LLM.",
            "Member Type": "Object"
          },
          {
            "Name": "llm.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A document to be used as source content when calling the LLM.",
            "Member Type": "Object"
          },
          {
            "Name": "llm.EmbedResponse",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The embeddings response returned from the LLM.",
            "Member Type": "Object"
          },
          {
            "Name": "llm.Response",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The response returned from the LLM.",
            "Member Type": "Object"
          },
          {
            "Name": "llm.StreamedResponse",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The streamed response returned from the LLM.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "llm.createChatMessage(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a chat message based on a specified role and text."
          },
          {
            "Name": "llm.createDocument(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a document to be used as source content when calling the LLM.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.embed(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the embeddings from the LLM for a given input.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.embed.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Asynchronously returns the embeddings from the LLM for a given input.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.evaluatePrompt(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Takes the ID of an existing prompt and values for variables used in the prompt and returns the response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.evaluatePrompt.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Takes the ID of an existing prompt and values for variables used in the prompt and asynchronously returns the response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.evaluatePromptStreamed(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Takes the ID of an existing prompt and values for variables used in the prompt and returns the streamed response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.evaluatePromptStreamed.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Takes the ID of an existing prompt and values for variables used in the prompt and asynchronously returns the streamed response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.generateText(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Takes a prompt and parameters for the LLM and returns the response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.generateText.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Takes a prompt and parameters for the LLM and asynchronously returns the response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.generateTextStreamed(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Takes a prompt and parameters for the LLM and returns the streamed response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.generateTextStreamed.promise(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Takes a prompt and parameters for the LLM and asynchronously returns the streamed response from the LLM. When unlimited usage mode is used, it also accepts the OCI configuration parameters.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.getRemainingFreeUsage()",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the number of free requests in the current month.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.getRemainingFreeUsage.promise()",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Asynchronously returns the number of free requests in the current month.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.getRemainingFreeEmbedUsage()",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the number of free embeddings requests in the current month.",
            "Member Type": "Method"
          },
          {
            "Name": "llm.getRemainingFreeEmbedUsage.promise()",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Asynchronously returns the number of free embeddings requests in the current month.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "llm.ChatRole",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the author (role) of a chat message.\n                    Use this enum to set the value of the ChatMessage.role property."
          },
          {
            "Name": "llm.EmbedModelFamily",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "The large language model to be used to generate embeddings.\n                    Use this enum to set the value of the options.embedModelFamily parameter in llm.embed(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "llm.ModelFamily",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the large language model to be used.\n                    Use this enum to set the options.model parameter in llm.generateText(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "llm.Truncate",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "The truncation method to use when embeddings input exceeds 512 tokens.\n                    Use this enum to set the value of the options.truncate parameter in llm.embed(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "ChatMessage",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ChatMessage.role",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The author (role) of the chat message. Use the llm.ChatRole enum to set the value."
          },
          {
            "Name": "ChatMessage.text",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Text of the chat message. Can be either the prompt sent by the script or the response returned by the LLM.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Citation",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Citation.documentIds",
            "Return Type / Value Type": "string[]",
            "Supported Script Types": "Server scripts",
            "Description": "The IDs of the documents where the cited text is located."
          },
          {
            "Name": "Citation.end",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The ending position of the cited text.",
            "Member Type": "Property"
          },
          {
            "Name": "Citation.start",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The starting position of the cited text.",
            "Member Type": "Property"
          },
          {
            "Name": "Citation.text",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The cited text from the documents.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Document",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Document.data",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The content of the document."
          },
          {
            "Name": "Document.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the document.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "EmbedResponse",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "EmbedResponse.embeddings",
            "Return Type / Value Type": "number[]",
            "Supported Script Types": "Server scripts",
            "Description": "The embeddings returned from the LLM."
          },
          {
            "Name": "EmbedResponse.inputs",
            "Return Type / Value Type": "string[]",
            "Supported Script Types": "Server scripts",
            "Description": "The list of inputs used to generate the embeddings response.",
            "Member Type": "Property"
          },
          {
            "Name": "EmbedResponse.model",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The model used to generate the embeddings response.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Response",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Response.chatHistory",
            "Return Type / Value Type": "llm.ChatMessage[]",
            "Supported Script Types": "Server scripts",
            "Description": "List of chat messages."
          },
          {
            "Name": "Response.citations",
            "Return Type / Value Type": "llm.Citation[]",
            "Supported Script Types": "Server scripts",
            "Description": "List of citations used to generate the response.",
            "Member Type": "Property"
          },
          {
            "Name": "Response.documents",
            "Return Type / Value Type": "llm.Document[]",
            "Supported Script Types": "Server scripts",
            "Description": "List of documents used to generate the response.",
            "Member Type": "Property"
          },
          {
            "Name": "Response.model",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Model used to produce the LLM response.",
            "Member Type": "Property"
          },
          {
            "Name": "Response.text",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Text returned by the LLM.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "StreamedResponse",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "StreamedResponse.chatHistory",
            "Return Type / Value Type": "llm.ChatMessage[]",
            "Supported Script Types": "Server scripts",
            "Description": "List of chat messages."
          },
          {
            "Name": "StreamedResponse.citations",
            "Return Type / Value Type": "llm.Citation[]",
            "Supported Script Types": "Server scripts",
            "Description": "List of citations used to generate the streamed response.",
            "Member Type": "Property"
          },
          {
            "Name": "StreamedResponse.documents",
            "Return Type / Value Type": "llm.Document[]",
            "Supported Script Types": "Server scripts",
            "Description": "List of documents used to generate the streamed response.",
            "Member Type": "Property"
          },
          {
            "Name": "StreamedResponse.model",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Model used to produce the streamed response.",
            "Member Type": "Property"
          },
          {
            "Name": "StreamedResponse.text",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Text returned by the LLM.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  [
    "N/log",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Log Level": "Debug",
            "Example Uses": "Use Debug to show all messages.\n                  This type of logging is suitable only for testing scripts. To avoid excessive logging, don't use Debug level for active scripts in production."
          },
          {
            "Log Level": "Audit",
            "Example Uses": "Use Audit to shows a record of events that have occurred during the processing of the script (for example, “A request was made to an external site.”)."
          },
          {
            "Log Level": "Error",
            "Example Uses": "Use Error to show only unexpected script errors."
          },
          {
            "Log Level": "Emergency",
            "Example Uses": "Use Emergency to show only the most critical errors in the script log."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Log Level": "Debug",
            "Example Uses": "Use Debug to show all messages.\n                  This type of logging is suitable only for testing scripts. To avoid excessive logging, don't use Debug level for active scripts in production."
          },
          {
            "Log Level": "Audit",
            "Example Uses": "Use Audit to shows a record of events that have occurred during the processing of the script (for example, “A request was made to an external site.”)."
          },
          {
            "Log Level": "Error",
            "Example Uses": "Use Error to show only unexpected script errors."
          },
          {
            "Log Level": "Emergency",
            "Example Uses": "Use Emergency to show only the most critical errors in the script log."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Log Level": "Debug",
            "Example Uses": "Use Debug to show all messages.\n                  This type of logging is suitable only for testing scripts. To avoid excessive logging, don't use Debug level for active scripts in production."
          },
          {
            "Log Level": "Audit",
            "Example Uses": "Use Audit to shows a record of events that have occurred during the processing of the script (for example, “A request was made to an external site.”)."
          },
          {
            "Log Level": "Error",
            "Example Uses": "Use Error to show only unexpected script errors."
          },
          {
            "Log Level": "Emergency",
            "Example Uses": "Use Emergency to show only the most critical errors in the script log."
          }
        ]
      }
    ]
  ],
  [
    "N/pgp",
    [
      {
        "Name": "N/pgp",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "pgp.Config",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "General configuration options that can be used for message decryption."
          },
          {
            "Name": "pgp.Key",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Cryptographic keys and its metadata.",
            "Member Type": "Object"
          },
          {
            "Name": "pgp.KeyId",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "An octet scalar that identifies a subkey.",
            "Member Type": "Object"
          },
          {
            "Name": "pgp.Message",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Processed PGP data.",
            "Member Type": "Object"
          },
          {
            "Name": "pgp.MessageData",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Message data.",
            "Member Type": "Object"
          },
          {
            "Name": "pgp.Verification",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Verification results.",
            "Member Type": "Object"
          },
          {
            "Name": "pgp.VerificationSignature",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A verification result for a single signature.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "pgp.createConfig(options)",
            "Return Type / Value Type": "pgp.Config",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a new configuration object."
          },
          {
            "Name": "pgp.createMessageData(options)",
            "Return Type / Value Type": "pgp.MessageData",
            "Supported Script Types": "Server scripts",
            "Description": "Creates new message data.",
            "Member Type": "Method"
          },
          {
            "Name": "pgp.createSigner(options)",
            "Return Type / Value Type": "certificate.Signer",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a certificate.Signer object for signing plain strings.",
            "Member Type": "Method"
          },
          {
            "Name": "pgp.createVerification()",
            "Return Type / Value Type": "pgp.Verification",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an empty verification object.",
            "Member Type": "Method"
          },
          {
            "Name": "pgp.loadKeyFromSecret(options)",
            "Return Type / Value Type": "pgp.Key",
            "Supported Script Types": "Server scripts",
            "Description": "Loads a key whose contents are stored securely in secret.",
            "Member Type": "Method"
          },
          {
            "Name": "pgp.parseMessage(options)",
            "Return Type / Value Type": "pgp.Message",
            "Supported Script Types": "Server scripts",
            "Description": "Parses a PGP message.",
            "Member Type": "Method"
          },
          {
            "Name": "pgp.parseKey(options)",
            "Return Type / Value Type": "pgp.Key",
            "Supported Script Types": "Server scripts",
            "Description": "Parses an existing PGP key.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "pgp.CompressionAlgorithm",
            "Return Type / Value Type": "Enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for available compression algorithms. Use this enum to set the value of the options.compressionAlgorithm parameter of the MessageData.encrypt(options) method."
          },
          {
            "Name": "pgp.Format",
            "Return Type / Value Type": "Enum",
            "Supported Script Types": "Server scripts",
            "Description": "Literal data packet type. Use this enum to set the value for the options.format parameter of the pgp.createMessageData(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "Config",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Config.allowInsecureDecryptionWithSigningKeys",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Enables decryption that is not secured with signing keys."
          },
          {
            "Name": "Config.allowMessagesWithoutIntegrityProtection",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Allows messages without integrity protection.",
            "Member Type": "Property"
          },
          {
            "Name": "Config.useRelaxedSignatureParsing",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Relaxed signature parsing for configuration objects.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "KeyId",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "KeyId.asHex()",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a key ID as a hexadecimal string."
          }
        ]
      },
      {
        "Name": "Message",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Message.type",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server Scripts",
            "Description": "Message type that specifies how a message is processed."
          },
          {
            "Member Type": "Method",
            "Name": "Message.asArmored()",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Converts a message to ASCII armored format."
          },
          {
            "Name": "Message.toMessageData()",
            "Return Type / Value Type": "pgp.MessageData",
            "Supported Script Types": "Server scripts",
            "Description": "Converts a message to message data without processing. Works only if the message is not encrypted.",
            "Member Type": "Method"
          },
          {
            "Name": "Message.decrypt(options)",
            "Return Type / Value Type": "pgp.MessageData",
            "Supported Script Types": "Server scripts",
            "Description": "Decrypts a message and optionally verifies the signatures.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "MessageData",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "MessageData.filename",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of a file."
          },
          {
            "Name": "MessageData.date",
            "Return Type / Value Type": "Date",
            "Supported Script Types": "Server scripts",
            "Description": "The date of a message or modification date of the file.",
            "Member Type": "Property"
          },
          {
            "Name": "MessageData.format",
            "Return Type / Value Type": "pgp.Format",
            "Supported Script Types": "Server scripts",
            "Description": "Literal data packet type.",
            "Member Type": "Property"
          },
          {
            "Member Type": "Method",
            "Name": "MessageData.getText()",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "Extracts the contents of a message as text."
          },
          {
            "Name": "MessageData.toMessage()",
            "Return Type / Value Type": "pgp.Message",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a message with no signature, compression, or encryption.",
            "Member Type": "Method"
          },
          {
            "Name": "MessageData.encrypt(options)",
            "Return Type / Value Type": "pgp.Message",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a message that is encrypted and optionally signed.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "Verification",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "VerificationSignature.verified",
            "Return Type / Value Type": "null | boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates whether verification was successful."
          },
          {
            "Name": "Verification.signatures",
            "Return Type / Value Type": "null | Array<VerificationSignature>",
            "Supported Script Types": "Server scripts",
            "Description": "A list of individual verifications, one per signature.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "VerificationSignature",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "VerificationSignature.keyId",
            "Return Type / Value Type": "pgp.KeyId",
            "Supported Script Types": "Server Scripts",
            "Description": "ID of the (sub)key that was used for signing."
          },
          {
            "Name": "VerificationSignature.dateSigned",
            "Return Type / Value Type": "Date",
            "Supported Script Types": "Server Scripts",
            "Description": "Date when the message was signed.",
            "Member Type": "Property"
          },
          {
            "Name": "VerificationSignature.verified",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates whether verification was successful for a signature.",
            "Member Type": "Property"
          },
          {
            "Name": "VerificationSignature.problems",
            "Return Type / Value Type": "string[]",
            "Supported Script Types": "Server scripts",
            "Description": "A list of problems for verification signatures.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  [
    "N/piremoval",
    [
      {
        "Name": "N/piremoval",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "piremoval.PiRemovalTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a personal information removal task.\n                    Use piremoval.createTask(options) to create this object."
          },
          {
            "Name": "piremoval.PiRemovalTaskLogItem",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a log item of the personal information removal task status.",
            "Member Type": "Object"
          },
          {
            "Name": "piremoval.PiRemovalTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates the status of a personal information removal task. Use piremoval.getTaskStatus(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "piremoval.createTask(options)",
            "Return Type / Value Type": "piremoval.PiRemovalTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a personal information removal task."
          },
          {
            "Name": "piremoval.deleteTask(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Deletes a personal information removal task.",
            "Member Type": "Method"
          },
          {
            "Name": "piremoval.getTaskStatus(options)",
            "Return Type / Value Type": "piremoval.PiRemovalTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Retrieves the status of a personal information removal task.",
            "Member Type": "Method"
          },
          {
            "Name": "piremoval.loadTask(options)",
            "Return Type / Value Type": "piremoval.PiRemovalTask",
            "Supported Script Types": "Server scripts",
            "Description": "Loads a personal information removal task.",
            "Member Type": "Method"
          }
        ]
      },
      {
        "Name": "PiRemovalTask",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "PiRemovalTask.deleteTask()",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Deletes the personal information removal task."
          },
          {
            "Name": "PiRemovalTask.run()",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Runs the personal information removal task.",
            "Member Type": "Method"
          },
          {
            "Name": "PiRemovalTask.save()",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Saves the personal information removal task.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "PiRemovalTask.fieldIds",
            "Return Type / Value Type": "string[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the field IDs that are processed by the PI removal task."
          },
          {
            "Name": "PiRemovalTask.historyOnly",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates whether the PI removal task removes system note information only, not field values or workflow history.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTask.historyReplacement",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the text used in system notes to replace the original values.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTask.id",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the ID of the personal information removal task.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTask.recordIds",
            "Return Type / Value Type": "number[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the record IDs that are processed by the PI removal task.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTask.recordType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the record type updated by the PI removal task.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTask.status",
            "Return Type / Value Type": "piremoval.PiRemovalTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the status of the submitted personal information removal task.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTask.workflowIds",
            "Return Type / Value Type": "number[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the workflow IDs whose history is processed by the PI removal task.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PiRemovalTaskLogItem",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PiRemovalTaskLogItem.exception",
            "Return Type/Value Type": "string (read-only)",
            "Support Script Type": "Server scripts",
            "Description": "Describes the exception for the log item, including and what caused it."
          },
          {
            "Name": "PiRemovalTaskLogItem.message",
            "Return Type/Value Type": "string (read-only)",
            "Support Script Type": "Server scripts",
            "Description": "Describes the message for the log item and an explanation for any errors.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTaskLogItem.status",
            "Return Type/Value Type": "string (read-only)",
            "Support Script Type": "Server scripts",
            "Description": "Describes the status of the log item. This property takes its values from task.TaskStatus.",
            "Member Type": "Property"
          },
          {
            "Name": "PiRemovalTaskLogItem.type",
            "Return Type/Value Type": "string (read-only)",
            "Support Script Type": "Server scripts",
            "Description": "Describes the type of personal information that was removed, one of FieldValue, SystemNote, or Workflow.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PiRemovalTaskStatus",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PiRemovalTaskStatus.logList",
            "Return Type/Value Type": "list",
            "Support Script Type": "Server scripts",
            "Description": "Represents a list of logs for the PI removal task job."
          },
          {
            "Name": "PiRemovalTaskStatus.status",
            "Return Type/Value Type": "string",
            "Support Script Type": "Server scripts",
            "Description": "Describes the status of the submitted personal information removal task.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  [
    "N/plugin",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "plugin.findImplementations(options)",
            "Return Type / Value Type": "string[]",
            "Supported Script Types": "Server scripts",
            "Description": "Returns the script IDs of custom plug-in type implementations."
          },
          {
            "Member Type": "Method",
            "Name": "plugin.loadImplementation(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Instantiates an implementation of the custom plug-in type."
          }
        ]
      }
    ]
  ],
  [
    "N/portlet",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "portlet.resize()",
            "Return Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Resizes a form portlet immediately."
          },
          {
            "Name": "portlet.refresh()",
            "Return Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Refreshes a form portlet immediately.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/query",
    [
      {
        "Name": "N/query",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "query.Column",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The field types (query result columns) that are displayed from the query results.\n                    Use Query.createColumn(options) or Component.createColumn(options) to create this object."
          },
          {
            "Name": "query.Component",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "One component of the query definition. The query definition always contains at least one component that encapsulates the initial query type. Queries with joins contain multiple components that encapsulate the join relationships.\n                    The initial component (Query.root) is automatically created with the query definition (query.Query). Use Query.autoJoin(options) or Component.autoJoin(options) to create subsequent components.",
            "Member Type": "Object"
          },
          {
            "Name": "query.Condition",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A condition. A condition narrows the query results.\n                    Use Query.createCondition(options) or Component.createCondition(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Name": "query.Page",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "One page of the paged query results.",
            "Member Type": "Object"
          },
          {
            "Name": "query.PagedData",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A set of paged query results. This object also contains information about the set of paged results it encapsulates.",
            "Member Type": "Object"
          },
          {
            "Name": "query.PageRange",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A range of pages from the paged query results.",
            "Member Type": "Object"
          },
          {
            "Name": "query.Period",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A period of time to use in query conditions.",
            "Member Type": "Object"
          },
          {
            "Name": "query.RelativeDate",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A relative date to use in query conditions.",
            "Member Type": "Object"
          },
          {
            "Name": "query.Result",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A single row of the query result set.",
            "Member Type": "Object"
          },
          {
            "Name": "query.ResultSet",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The set of results returned by the query.",
            "Member Type": "Object"
          },
          {
            "Name": "query.Query",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The query definition. Use query.create(options) or query.load(options) to create this object.\n                    The creation of this object is the first step in creating a query with the N/query Module.",
            "Member Type": "Object"
          },
          {
            "Name": "query.Sort",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A sort that is placed on a particular query result column.\n                    Use Query.createSort(options) or Component.createSort(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Name": "query.SuiteQL",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "A SuiteQL query.\n                    Use Query.toSuiteQL() to create this object.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "query.create(options)",
            "Return Type / Value Type": "query.Query",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates the query definition.\n                    The of this method is the first step in creating a query with the N/query Module."
          },
          {
            "Name": "query.createPeriod(options)",
            "Return Type / Value Type": "query.Period",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a query.Period object that represents a period of time.",
            "Member Type": "Method"
          },
          {
            "Name": "query.createRelativeDate(options)",
            "Return Type / Value Type": "query.RelativeDate",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a query.RelativeDate object that represents a date relative to the current date.",
            "Member Type": "Method"
          },
          {
            "Name": "query.delete(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client and server scripts",
            "Description": "Deletes an existing query that was created using the SuiteAnalytics Workbook UI. The deleted query is no longer available and cannot be modified or executed.",
            "Member Type": "Method"
          },
          {
            "Name": "query.listTables(options)",
            "Return Type / Value Type": "<Object>",
            "Supported Script Types": "Client and server scripts",
            "Description": "Lists the table view objects that are included in a workbook in SuiteAnalytics Workbook.",
            "Member Type": "Method"
          },
          {
            "Name": "query.load(options)",
            "Return Type / Value Type": "query.Query",
            "Supported Script Types": "Client and server scripts",
            "Description": "Loads an existing query that was created using the SuiteAnalytics Workbook UI. The loaded query can be modified (for example, by setting additional property values), joined with other query types, and executed in the same way as queries created using query.create(options).",
            "Member Type": "Method"
          },
          {
            "Name": "query.load.promise(options)",
            "Return Type / Value Type": "Promise Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Asynchronously loads an existing query that was created using the SuiteAnalytics Workbook UI.",
            "Member Type": "Method"
          },
          {
            "Name": "query.runSuiteQL(options)",
            "Return Type / Value Type": "query.ResultSet",
            "Supported Script Types": "Client and server scripts",
            "Description": "Runs an arbitrary SuiteQL query.",
            "Member Type": "Method"
          },
          {
            "Name": "query.runSuiteQL.promise(options)",
            "Return Type / Value Type": "Promise Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Asynchronously runs an arbitrary SuiteQL query.",
            "Member Type": "Method"
          },
          {
            "Name": "query.runSuiteQLPaged(options)",
            "Return Type / Value Type": "query.PagedData",
            "Supported Script Types": "Client and server scripts",
            "Description": "Runs an arbitrary SuiteQL query as a paged query.",
            "Member Type": "Method"
          },
          {
            "Name": "query.runSuiteQLPaged.promise(options)",
            "Return Type / Value Type": "Promise Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Asynchronously runs an arbitrary query as a paged query.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "query.Aggregate",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for aggregate functions supported with the N/query Module.\n                    This enum is used to pass the aggregate function argument to Component.createColumn(options), Component.createCondition(options), Query.createColumn(options), and Query.createCondition(options)."
          },
          {
            "Name": "query.DateId",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for supported date codes in relative dates.\n                    This enum is used to pass the date ID argument to query.createRelativeDate(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.FieldContext",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the field context to use when creating a column.\n                    This enum is used to pass the context argument to Query.createColumn(options) and Component.createColumn(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.Operator",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for operators supported with the N/query Module.\n                    This enum is used to pass the operator argument to Query.createCondition(options) and Component.createCondition(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.PeriodAdjustment",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for adjustment types for a period.\n                    This enum is used to pass the adjustment argument to query.createPeriod(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.PeriodCode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for period codes for a period.\n                    This enum is used to pass the code argument to query.createPeriod(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.PeriodType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for period types for a period.\n                    This enum is used to pass the type argument to query.createPeriod(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.RelativeDateRange",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds query.RelativeDate object values for supported date ranges in relative dates.\n                    This enum is used to pass the values argument to Query.createCondition(options) and Component.createCondition(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.ReturnType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the formula return types supported with the N/query Module.\n                    This enum is used to pass the formula return type argument to Query.createColumn(options), Component.createColumn(options), Query.createCondition(options), and Component.createCondition(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.SortLocale",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for sort locales supported with the N/query Module.\n                    This enum is used to pass the sort locale argument to Query.createSort(options) and Component.createSort(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "query.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for supported query types used in the query definition.\n                    This enum is used to pass the initial query type argument to query.create(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "Column",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Column.aggregate",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An aggregate function that is performed on the query result column. An aggregate function performs a calculation on the column values and returns a single value."
          },
          {
            "Name": "Column.alias",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An alias for this column. An alias is an alternate name for a column, and the alias is used in mapped results.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.component",
            "Return Type/Value Type": "query.Component (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "A reference to the query.Component object to which this query result column belongs.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.context",
            "Return Type/Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The field context for values in the query result column. The field context determines how field values are displayed in the column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.fieldId",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The name of the query result column. This property and the Column.formula property cannot be set at the same time.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.formula",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The formula used to create the query result column. This property and the Column.fieldId property cannot be set at the same time.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.groupBy",
            "Return Type/Value Type": "(read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether the query results are grouped by this query result column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.label",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The label for the column.",
            "Member Type": "Property"
          },
          {
            "Name": "Column.type",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The return type of the formula used to create the query result column.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Component",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Component.autoJoin(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a join relationship.\n                    After you create the initial query definition, use Query.autoJoin(options) to create your first join. Then use this method to create each subsequent join.\n                    This method selects the correct join type automatically based on the record types that are being joined."
          },
          {
            "Name": "Component.createColumn(options)",
            "Return Type/Value Type": "query.Column",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a query result column based on the component.\n                    Use this method to create columns based on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).",
            "Member Type": "Method"
          },
          {
            "Name": "Component.createCondition(options)",
            "Return Type/Value Type": "query.Condition",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a condition (filter column) based on the component.\n                    Use this method to create conditions based on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).",
            "Member Type": "Method"
          },
          {
            "Name": "Component.createSort(options)",
            "Return Type/Value Type": "query.Sort",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a sort based on the component.\n                    Use this method to create sorts based on the join relationships created with Query.autoJoin(options) and Component.autoJoin(options).",
            "Member Type": "Method"
          },
          {
            "Name": "Component.join(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a join relationship. This method is an alias to Component.autoJoin(options).\n                    After you create the initial query definition, use Query.autoJoin(options) to create your first join. Then use this method, or Component.autoJoin(options), to create each subsequent join.",
            "Member Type": "Method"
          },
          {
            "Name": "Component.joinFrom(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates an explicit directional join relationship from another component to this component (an inverse join). This method sets the Component.source property on the returned query.Component object.\n                    After you create the initial query definition, use this method to create explicit directional joins from other components to this component.",
            "Member Type": "Method"
          },
          {
            "Name": "Component.joinTo(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates an explicit directional join relationship to another component from this component (a join). You can use this method to specify the target of the join when a field can join multiple query types. This method sets the Component.target property on the returned query.Component object.\n                    After you create the initial query definition, use this method to create explicit directional joins to other components from this component.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "Component.child",
            "Return Type/Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The child components of the component. This property holds an object of key-value pairs. Each key is the name of a child component. Each value is the corresponding child query.Component object."
          },
          {
            "Name": "Component.parent",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The parent query.Component object of the component.",
            "Member Type": "Property"
          },
          {
            "Name": "Component.source",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The source query type of the component.\n                    The value of this property is set when Component.joinFrom(options) is called to perform an explicit directional join from another component.",
            "Member Type": "Property"
          },
          {
            "Name": "Component.target",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The target query type of the component.\n                    The value of this property is set when Component.joinTo(options) is called to perform an explicit directional join to another component.",
            "Member Type": "Property"
          },
          {
            "Name": "Component.type",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The query type of the component.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Condition",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Condition.aggregate",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An aggregate function that is performed on the condition. An aggregate function performs a calculation on the condition values and returns a single value."
          },
          {
            "Name": "Condition.children",
            "Return Type/Value Type": "query.Condition[] (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of child conditions used to create the parent condition.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.component",
            "Return Type/Value Type": "query.Component (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "A reference to the query.Component object to which this condition belongs.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.fieldId",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The name of the field that is used in the condition.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.formula",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The formula used to create the condition.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.operator",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The name of the operator used to create the condition.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.type",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The return type of the formula used to create the condition.",
            "Member Type": "Property"
          },
          {
            "Name": "Condition.values",
            "Return Type/Value Type": "string | number | | <string | number | > (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of values used by an operator to create the condition.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Page",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Page.data",
            "Return Type/Value Type": "query.ResultSet (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The query results contained in this page."
          },
          {
            "Name": "Page.isFirst",
            "Return Type/Value Type": "(read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether this page is the first of the paged query results.",
            "Member Type": "Property"
          },
          {
            "Name": "Page.isLast",
            "Return Type/Value Type": "(read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether this page is the last of the paged query results.",
            "Member Type": "Property"
          },
          {
            "Name": "Page.pagedData",
            "Return Type/Value Type": "query.PagedData (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The set of paged query results that this page is from.",
            "Member Type": "Property"
          },
          {
            "Name": "Page.pageRange",
            "Return Type/Value Type": "query.PageRange (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The range of query results for this page.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PagedData",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "PagedData.iterator()",
            "Return Type/Value Type": "Iterator object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Standard SuiteScript 2.0 object for iterating through results."
          },
          {
            "Name": "PagedData.fetch(options)",
            "Return Type/Value Type": "query.Page",
            "Supported Script Types": "Client and server scripts",
            "Description": "Retrieves a page in the set of pages included in the PagedData object.",
            "Member Type": "Method"
          },
          {
            "Name": "PagedData.fetch.promise(options)",
            "Return Type/Value Type": "Promise Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Asynchronously retrieves a page in the set of pages included in the PagedData object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "PagedData.count",
            "Return Type/Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The total number of paged query results."
          },
          {
            "Name": "PagedData.pageRanges",
            "Return Type/Value Type": "query.PageRange[]",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of page ranges for the set of paged query results.",
            "Member Type": "Property"
          },
          {
            "Name": "PagedData.pageSize",
            "Return Type/Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of query result rows per page.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PageRange",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PageRange.index",
            "Return Type/Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The index for this page range."
          },
          {
            "Name": "PageRange.size",
            "Return Type/Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of query result rows in this page range.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Period",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Period.adjustment",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The adjustment of the period.\n                    This property uses values from the query.PeriodAdjustment enum."
          },
          {
            "Name": "Period.code",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The code of the period.\n                    This property uses values from the query.PeriodCode enum.",
            "Member Type": "Property"
          },
          {
            "Name": "Period.type",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The type of the period.\n                    This property uses values from the query.PeriodType enum.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Query",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Query.and(conditions)",
            "Return Type/Value Type": "query.Condition",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a new condition (a query.Condition object) that corresponds to a logical conjunction (AND) of the arguments passed to the method. The arguments must be one or more query.Condition objects."
          },
          {
            "Name": "Query.autoJoin(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a join relationship.\n                    After you create the initial query definition, use this method to create your first join or subsequent joins from the root component of the query.\n                    This method selects the correct join type automatically based on the record types that are being joined.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.createColumn(options)",
            "Return Type/Value Type": "query.Column",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a query result column based on the query.Query object.\n                    Use this method to create columns on the initial query definition created with query.create(options).",
            "Member Type": "Method"
          },
          {
            "Name": "Query.createCondition(options)",
            "Return Type/Value Type": "query.Condition",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a condition (filter column) based on the query.Query object.\n                    Use this method to create conditions on the initial query definition created with query.create(options).",
            "Member Type": "Method"
          },
          {
            "Name": "Query.createSort(options)",
            "Return Type/Value Type": "query.Sort",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a sort based on the query.Query object. The query.Sort object describes a sort that is placed on a particular query result column or condition.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.join(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a join relationship. This method is an alias to Query.autoJoin(options).\n                    After you create the initial query definition, use this method, or Query.autoJoin(options), to create your first join.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.joinFrom(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates an explicit directional join relationship from another component to the root component of the search definition (an inverse join). This method sets the Component.source property on the returned query.Component object.\n                    After you create the initial query definition, use this method to create your first join as an explicit directional join from another component to this component.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.joinTo(options)",
            "Return Type/Value Type": "query.Component",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates an explicit directional join relationship to another component from this component (a forward join). You can use this method to specify the target of the join when a field can join multiple query types. This method sets the Component.target property on the returned query.Component object.\n                    After you create the initial query definition, use this method to create your first join as an explicit directional join to another component from this component.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.not(condition)",
            "Return Type/Value Type": "query.Condition",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a new condition (a query.Condition object) that corresponds to a logical negation (NOT) of the argument passed to the method. The argument must be a query.Condition object.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.or(conditions)",
            "Return Type/Value Type": "query.Condition",
            "Supported Script Types": "Client and server scripts",
            "Description": "Creates a new condition (a query.Condition object) that corresponds to a logical disjunction (OR) of the arguments passed to the method. The arguments must be one or more query.Condition objects.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.run()",
            "Return Type/Value Type": "query.ResultSet",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes the query and returns the query result set.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.run.promise()",
            "Return Type/Value Type": "query.ResultSet",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes the query asynchronously and returns the query result set.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.runPaged()",
            "Return Type/Value Type": "query.PagedData",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes the query and returns a set of paged results.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.runPaged.promise()",
            "Return Type/Value Type": "query.PagedData",
            "Supported Script Types": "Client and server scripts",
            "Description": "Executes the query asynchronously and returns a set of paged results.",
            "Member Type": "Method"
          },
          {
            "Name": "Query.toSuiteQL()",
            "Return Type/Value Type": "query.SuiteQL",
            "Supported Script Types": "Client and server scripts",
            "Description": "Converts this query.Query object to its corresponding SuiteQL representation.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "Query.child",
            "Return Type/Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "A reference to children of the root component of the query definition. The value of this property is an object of key-value pairs. Each key is the name of a child component. Each respective value is the corresponding query.Component object."
          },
          {
            "Name": "Query.columns",
            "Return Type/Value Type": "query.Column[]",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of query result columns returned from the query.\n                    Before you perform the query, you must assign all created columns as values to this property.",
            "Member Type": "Property"
          },
          {
            "Name": "Query.condition",
            "Return Type/Value Type": "query.Condition object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The parent condition that narrows the query results.\n                    Before you perform the query, you must assign your simple or complex conditions to this property.",
            "Member Type": "Property"
          },
          {
            "Name": "Query.id",
            "Return Type/Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The ID of the query definition.\n                    This property has a value only for existing queries that are loaded using query.load(options). If you create a query using query.create(options) but do not save it, this property is null.",
            "Member Type": "Property"
          },
          {
            "Name": "Query.name",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The name of the query definition.\n                    This property has a value only for existing queries that are loaded using query.load(options). If you create a query using query.create(options) but do not save it, this property is null.",
            "Member Type": "Property"
          },
          {
            "Name": "Query.root",
            "Return Type/Value Type": "query.Component (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The root component of the query definition.",
            "Member Type": "Property"
          },
          {
            "Name": "Query.sort",
            "Return Type/Value Type": "query.Column[] (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of query result columns used for sorting.",
            "Member Type": "Property"
          },
          {
            "Name": "Query.type",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The query type of the initial query definition.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "RelativeDate",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "RelativeDate.dateId",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The ID of the relative date."
          },
          {
            "Name": "RelativeDate.end",
            "Return Type/Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The end point of the relative date.",
            "Member Type": "Property"
          },
          {
            "Name": "RelativeDate.interval",
            "Return Type/Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The interval of the relative date (from the RelativeDate.start point to the RelativeDate.end point).",
            "Member Type": "Property"
          },
          {
            "Name": "RelativeDate.isRange",
            "Return Type/Value Type": "(read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether the relative date represents a range of dates or a specific moment in time.",
            "Member Type": "Property"
          },
          {
            "Name": "RelativeDate.start",
            "Return Type/Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The start point of the relative date.",
            "Member Type": "Property"
          },
          {
            "Name": "RelativeDate.value",
            "Return Type/Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The value of the relative date.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Result",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Result.asMap()",
            "Return Type/Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "The query result as a mapped result."
          },
          {
            "Member Type": "Property",
            "Name": "Result.values",
            "Return Type/Value Type": "<string | number | | null> (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The result values."
          }
        ]
      },
      {
        "Name": "ResultSet",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "ResultSet.asMappedResults()",
            "Return Type/Value Type": "Object[]",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a query result set as an of mapped results."
          },
          {
            "Name": "ResultSet.iterator()",
            "Return Type/Value Type": "Iterator object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Standard SuiteScript 2.0 object for iterating through results.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "ResultSet.columns",
            "Return Type/Value Type": "query.Column[] (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of query result column references."
          },
          {
            "Name": "ResultSet.results",
            "Return Type/Value Type": "query.Result[] (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of query.Result objects.",
            "Member Type": "Property"
          },
          {
            "Name": "ResultSet.types",
            "Return Type/Value Type": "string[] (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "An of the return types for ResultSet.results.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Sort",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Sort.ascending",
            "Return Type/Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether the sort direction is ascending."
          },
          {
            "Name": "Sort.caseSensitive",
            "Return Type/Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether the sort is case sensitive.\n                    If a sort is case sensitive (and the sort direction is ascending), rows with column values that start with uppercase letters are listed before rows with column values that start with lowercase letters. If a sort is not case sensitive, uppercase and lowercase letters are treated the same.",
            "Member Type": "Property"
          },
          {
            "Name": "Sort.column",
            "Return Type/Value Type": "query.Column (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The query result column that the query results are sorted by.",
            "Member Type": "Property"
          },
          {
            "Name": "Sort.locale",
            "Return Type/Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "The locale to use for the sort.\n                    A locale represents a combination of language and region, and it can affect how certain values (such as strings) are sorted.",
            "Member Type": "Property"
          },
          {
            "Name": "Sort.nullsLast",
            "Return Type/Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Whether query results with null values are listed at the end of the query results.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "SuiteQL",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "SuiteQL.run()",
            "Return Type/Value Type": "query.ResultSet",
            "Supported Script Types": "Client and server scripts",
            "Description": "Runs the SuiteQL query and returns the query results."
          },
          {
            "Name": "SuiteQL.runPaged(options)",
            "Return Type/Value Type": "query.PagedData",
            "Supported Script Types": "Client and server scripts",
            "Description": "Runs the SuiteQL query as a paged query and returns the paged query results.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "SuiteQL.columns",
            "Return Type/Value Type": "query.Column[]",
            "Supported Script Types": "Client and server scripts",
            "Description": "Describes the result columns to be returned from the query."
          },
          {
            "Name": "SuiteQL.params",
            "Return Type/Value Type": "<string | number | > (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Contains the parameters for the query.",
            "Member Type": "Property"
          },
          {
            "Name": "SuiteQL.query",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string representation of the query.",
            "Member Type": "Property"
          },
          {
            "Name": "SuiteQL.type",
            "Return Type/Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Describes the type of the query.\n                    This property uses values from the query.Type enum.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  ["N/record", []],
  [
    "N/recordContext",
    [
      {
        "Name": "N/recordContext",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "recordContext.RecordContext",
            "Return Type / Value Type": "Object (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Contains key-value pairs that represent context types and their values."
          },
          {
            "Member Type": "Method",
            "Name": "recordContext.getContext(options)",
            "Return Type / Value Type": "recordContext.RecordContext",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns the record context object for a record."
          },
          {
            "Member Type": "Enum",
            "Name": "recordContext.ContextType",
            "Return Type / Value Type": "enum (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the values for the context type. Used to set the value for the contextTypes parameter of the recordContext.getContext(options) method."
          }
        ]
      }
    ]
  ],
  [
    "N/redirect",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "redirect.redirect(options)",
            "Return Type": "void",
            "Supported Script Types": "Suitelets, beforeLoad user events, and synchronous afterSubmit user events",
            "Description": "Redirects to the URL of a Suitelet that is available externally (available without login)."
          },
          {
            "Name": "redirect.toRecord(options)",
            "Return Type": "void",
            "Supported Script Types": "Suitelets, beforeLoad user events, and synchronous afterSubmit user events",
            "Description": "Redirects to a NetSuite record.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toRecordTransform(options)",
            "Return Type": "void",
            "Supported Script Types": "workflow action scripts",
            "Description": "Redirects to a standard or custom transaction instance.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toSavedSearch(options)",
            "Return Type": "void",
            "Supported Script Types": "afterSubmit user events",
            "Description": "Redirects to a saved search.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toSavedSearchResult(options)",
            "Return Type": "void",
            "Supported Script Types": "afterSubmit user events",
            "Description": "Redirects to a saved search result.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toSearch(options)",
            "Return Type": "void",
            "Supported Script Types": "afterSubmit user events",
            "Description": "Redirects to search.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toSearchResult(options)",
            "Return Type": "void",
            "Supported Script Types": "afterSubmit user events",
            "Description": "Redirects to search results.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toSuitelet(options)",
            "Return Type": "void",
            "Supported Script Types": "Suitelets, beforeLoad user events, and synchronous afterSubmit user events",
            "Description": "Redirects to a Suitelet.",
            "Member Type": "Method"
          },
          {
            "Name": "redirect.toTaskLink(options)",
            "Return Type": "void",
            "Supported Script Types": "Suitelets, beforeLoad user events, and synchronous afterSubmit user events",
            "Description": "Redirects to a tasklink.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/render",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "render.EmailMergeResult",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an email merge result."
          },
          {
            "Name": "render.TemplateRenderer",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a template object that produces HTML and PDF printed forms utilizing advanced PDF/HTML template capabilities.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "render.bom(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a bill of materials."
          },
          {
            "Name": "render.create()",
            "Return Type / Value Type": "render.TemplateRenderer",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a render.TemplateRenderer object.",
            "Member Type": "Method"
          },
          {
            "Name": "render.mergeEmail(options)",
            "Return Type / Value Type": "render.EmailMergeResult",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a render.EmailMergeResult object.",
            "Member Type": "Method"
          },
          {
            "Name": "render.packingSlip(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a packing slip.",
            "Member Type": "Method"
          },
          {
            "Name": "render.pickingTicket(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a picking ticket.",
            "Member Type": "Method"
          },
          {
            "Name": "render.statement(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a statement.",
            "Member Type": "Method"
          },
          {
            "Name": "render.transaction(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a transaction.",
            "Member Type": "Method"
          },
          {
            "Name": "render.xmlToPdf(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Passes XML to the BFO tag library (which is stored by NetSuite), and returns a PDF file.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "render.DataSource",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported data source types.\n                  Use this enum to set the options.format parameter of the TemplateRenderer.addCustomDataSource(options) method."
          },
          {
            "Name": "render.PrintMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported print output types. Use this enum to set the options.printMode parameter of the render.bom(options), render.pickingTicket(options), and render.statement(options) methods.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "render.EmailMergeResult",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an email merge result."
          },
          {
            "Name": "render.TemplateRenderer",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a template object that produces HTML and PDF printed forms utilizing advanced PDF/HTML template capabilities.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "render.bom(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a bill of materials."
          },
          {
            "Name": "render.create()",
            "Return Type / Value Type": "render.TemplateRenderer",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a render.TemplateRenderer object.",
            "Member Type": "Method"
          },
          {
            "Name": "render.mergeEmail(options)",
            "Return Type / Value Type": "render.EmailMergeResult",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a render.EmailMergeResult object.",
            "Member Type": "Method"
          },
          {
            "Name": "render.packingSlip(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a packing slip.",
            "Member Type": "Method"
          },
          {
            "Name": "render.pickingTicket(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a picking ticket.",
            "Member Type": "Method"
          },
          {
            "Name": "render.statement(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a statement.",
            "Member Type": "Method"
          },
          {
            "Name": "render.transaction(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a transaction.",
            "Member Type": "Method"
          },
          {
            "Name": "render.xmlToPdf(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Passes XML to the BFO tag library (which is stored by NetSuite), and returns a PDF file.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "render.DataSource",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported data source types.\n                  Use this enum to set the options.format parameter of the TemplateRenderer.addCustomDataSource(options) method."
          },
          {
            "Name": "render.PrintMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported print output types. Use this enum to set the options.printMode parameter of the render.bom(options), render.pickingTicket(options), and render.statement(options) methods.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "render.EmailMergeResult",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates an email merge result."
          },
          {
            "Name": "render.TemplateRenderer",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a template object that produces HTML and PDF printed forms utilizing advanced PDF/HTML template capabilities.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "render.bom(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a bill of materials."
          },
          {
            "Name": "render.create()",
            "Return Type / Value Type": "render.TemplateRenderer",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a render.TemplateRenderer object.",
            "Member Type": "Method"
          },
          {
            "Name": "render.mergeEmail(options)",
            "Return Type / Value Type": "render.EmailMergeResult",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a render.EmailMergeResult object.",
            "Member Type": "Method"
          },
          {
            "Name": "render.packingSlip(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a packing slip.",
            "Member Type": "Method"
          },
          {
            "Name": "render.pickingTicket(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a picking ticket.",
            "Member Type": "Method"
          },
          {
            "Name": "render.statement(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a statement.",
            "Member Type": "Method"
          },
          {
            "Name": "render.transaction(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a PDF or HTML file object containing a transaction.",
            "Member Type": "Method"
          },
          {
            "Name": "render.xmlToPdf(options)",
            "Return Type / Value Type": "file.File",
            "Supported Script Types": "Server scripts",
            "Description": "Passes XML to the BFO tag library (which is stored by NetSuite), and returns a PDF file.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "render.DataSource",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported data source types.\n                  Use this enum to set the options.format parameter of the TemplateRenderer.addCustomDataSource(options) method."
          },
          {
            "Name": "render.PrintMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported print output types. Use this enum to set the options.printMode parameter of the render.bom(options), render.pickingTicket(options), and render.statement(options) methods.",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/runtime",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "runtime.Script",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the runtime settings of the currently executing script."
          },
          {
            "Name": "runtime.Session",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the user session for the currently executing script.",
            "Member Type": "Object"
          },
          {
            "Name": "runtime.User",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the properties and preferences of the user currently executing the script.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "runtime.getCurrentScript()",
            "Return Type / Value Type": "runtime.Script",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Script object that represents the currently executing script."
          },
          {
            "Name": "runtime.getCurrentSession()",
            "Return Type / Value Type": "runtime.Session",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Session object that represents the user session for the currently executing script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.getCurrentUser()",
            "Return Type / Value Type": "runtime.User",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.User object that represents the properties and preferences of the user currently executing the script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.isFeatureInEffect(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates whether a particular feature is enabled in a NetSuite account.\n                  These are the features that appear on the Enable Features page.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "runtime.accountId",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The account ID for the current user."
          },
          {
            "Name": "runtime.country",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The country for the current company.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.envType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The current environment in which the script is executing.\n                  This property uses values from the runtime.EnvType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.executionContext",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The trigger of the current script.\n                  This property uses values from the runtime.ContextType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.processorCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of processors available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.queueCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of scheduled script queues available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.version",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The version of NetSuite that the method is called in. For example, this property in an account running NetSuite 2023.2 is 2023.2.",
            "Member Type": "Property"
          },
          {
            "Member Type": "Enum",
            "Name": "runtime.ContextType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the context values for script triggers.\n                  This is the type for the runtime.executionContext property."
          },
          {
            "Name": "runtime.EnvType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds all possible environment types that the current script can execute in.\n                  This is the type for the runtime.envType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "runtime.Permission",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the user permission level for a specific permission ID.\n                  This is the type returned by the User.getPermission(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "runtime.Script",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the runtime settings of the currently executing script."
          },
          {
            "Name": "runtime.Session",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the user session for the currently executing script.",
            "Member Type": "Object"
          },
          {
            "Name": "runtime.User",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the properties and preferences of the user currently executing the script.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "runtime.getCurrentScript()",
            "Return Type / Value Type": "runtime.Script",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Script object that represents the currently executing script."
          },
          {
            "Name": "runtime.getCurrentSession()",
            "Return Type / Value Type": "runtime.Session",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Session object that represents the user session for the currently executing script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.getCurrentUser()",
            "Return Type / Value Type": "runtime.User",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.User object that represents the properties and preferences of the user currently executing the script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.isFeatureInEffect(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates whether a particular feature is enabled in a NetSuite account.\n                  These are the features that appear on the Enable Features page.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "runtime.accountId",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The account ID for the current user."
          },
          {
            "Name": "runtime.country",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The country for the current company.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.envType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The current environment in which the script is executing.\n                  This property uses values from the runtime.EnvType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.executionContext",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The trigger of the current script.\n                  This property uses values from the runtime.ContextType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.processorCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of processors available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.queueCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of scheduled script queues available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.version",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The version of NetSuite that the method is called in. For example, this property in an account running NetSuite 2023.2 is 2023.2.",
            "Member Type": "Property"
          },
          {
            "Member Type": "Enum",
            "Name": "runtime.ContextType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the context values for script triggers.\n                  This is the type for the runtime.executionContext property."
          },
          {
            "Name": "runtime.EnvType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds all possible environment types that the current script can execute in.\n                  This is the type for the runtime.envType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "runtime.Permission",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the user permission level for a specific permission ID.\n                  This is the type returned by the User.getPermission(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "runtime.Script",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the runtime settings of the currently executing script."
          },
          {
            "Name": "runtime.Session",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the user session for the currently executing script.",
            "Member Type": "Object"
          },
          {
            "Name": "runtime.User",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the properties and preferences of the user currently executing the script.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "runtime.getCurrentScript()",
            "Return Type / Value Type": "runtime.Script",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Script object that represents the currently executing script."
          },
          {
            "Name": "runtime.getCurrentSession()",
            "Return Type / Value Type": "runtime.Session",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Session object that represents the user session for the currently executing script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.getCurrentUser()",
            "Return Type / Value Type": "runtime.User",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.User object that represents the properties and preferences of the user currently executing the script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.isFeatureInEffect(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates whether a particular feature is enabled in a NetSuite account.\n                  These are the features that appear on the Enable Features page.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "runtime.accountId",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The account ID for the current user."
          },
          {
            "Name": "runtime.country",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The country for the current company.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.envType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The current environment in which the script is executing.\n                  This property uses values from the runtime.EnvType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.executionContext",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The trigger of the current script.\n                  This property uses values from the runtime.ContextType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.processorCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of processors available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.queueCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of scheduled script queues available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.version",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The version of NetSuite that the method is called in. For example, this property in an account running NetSuite 2023.2 is 2023.2.",
            "Member Type": "Property"
          },
          {
            "Member Type": "Enum",
            "Name": "runtime.ContextType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the context values for script triggers.\n                  This is the type for the runtime.executionContext property."
          },
          {
            "Name": "runtime.EnvType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds all possible environment types that the current script can execute in.\n                  This is the type for the runtime.envType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "runtime.Permission",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the user permission level for a specific permission ID.\n                  This is the type returned by the User.getPermission(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "runtime.Script",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the runtime settings of the currently executing script."
          },
          {
            "Name": "runtime.Session",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the user session for the currently executing script.",
            "Member Type": "Object"
          },
          {
            "Name": "runtime.User",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the properties and preferences of the user currently executing the script.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "runtime.getCurrentScript()",
            "Return Type / Value Type": "runtime.Script",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Script object that represents the currently executing script."
          },
          {
            "Name": "runtime.getCurrentSession()",
            "Return Type / Value Type": "runtime.Session",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.Session object that represents the user session for the currently executing script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.getCurrentUser()",
            "Return Type / Value Type": "runtime.User",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a runtime.User object that represents the properties and preferences of the user currently executing the script.",
            "Member Type": "Method"
          },
          {
            "Name": "runtime.isFeatureInEffect(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Indicates whether a particular feature is enabled in a NetSuite account.\n                  These are the features that appear on the Enable Features page.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Property",
            "Name": "runtime.accountId",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The account ID for the current user."
          },
          {
            "Name": "runtime.country",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The country for the current company.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.envType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The current environment in which the script is executing.\n                  This property uses values from the runtime.EnvType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.executionContext",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The trigger of the current script.\n                  This property uses values from the runtime.ContextType enum.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.processorCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of processors available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.queueCount",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The number of scheduled script queues available to the current account.",
            "Member Type": "Property"
          },
          {
            "Name": "runtime.version",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "The version of NetSuite that the method is called in. For example, this property in an account running NetSuite 2023.2 is 2023.2.",
            "Member Type": "Property"
          },
          {
            "Member Type": "Enum",
            "Name": "runtime.ContextType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the context values for script triggers.\n                  This is the type for the runtime.executionContext property."
          },
          {
            "Name": "runtime.EnvType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds all possible environment types that the current script can execute in.\n                  This is the type for the runtime.envType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "runtime.Permission",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the user permission level for a specific permission ID.\n                  This is the type returned by the User.getPermission(options) method.",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/scriptTypes/restlet",
    [
      {
        "Name": "N/scriptTypes/restlet",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "restlet.Response",
            "Return Type / Value Type": "Object (read-only)",
            "Supported Script Types": "RESTlet script",
            "Description": "An HTTP response of a RESTlet script."
          },
          {
            "Member Type": "Method",
            "Name": "restlet.createResponse(options)",
            "Return Type / Value Type": "restlet.Response",
            "Supported Script Types": "RESTlet script",
            "Description": "Creates a custom HTTP response for a RESTlet script."
          }
        ]
      },
      {
        "Name": "Response",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Response.content",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "RESTlet script",
            "Description": "The content of the RESTlet HTTP response."
          },
          {
            "Name": "Response.contentType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "RESTlet script",
            "Description": "The Content-Type header of the RESTlet HTTP response.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  ["N/search", []],
  [
    "N/sftp",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "sftp.Connection",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Represents a connection to the account on the remote FTP server."
          },
          {
            "Member Type": "Method",
            "Name": "sftp.createConnection(options)",
            "Return Type / Value Type": "sftp.Connection",
            "Supported Script Types": "Server scripts",
            "Description": "Establishes a connection to a remote FTP server."
          },
          {
            "Member Type": "Enum",
            "Name": "sftp.MAX_CONNECT_TIMEOUT",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for maximum connection timeout."
          },
          {
            "Name": "sftp.MIN_CONNECT_TIMEOUT",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for minimum connection timeout.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.MAX_PORT_NUMBER",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the maximum port number.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.MIN_PORT_NUMBER",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the minimum port number.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.DEFAULT_PORT_NUMBER",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the default port number.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.Sort",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values to be used to sort the listed directory.\n                  Use this enum to set the value of the options.sort parameter of the Connection.list(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "sftp.Connection",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Represents a connection to the account on the remote FTP server."
          },
          {
            "Member Type": "Method",
            "Name": "sftp.createConnection(options)",
            "Return Type / Value Type": "sftp.Connection",
            "Supported Script Types": "Server scripts",
            "Description": "Establishes a connection to a remote FTP server."
          },
          {
            "Member Type": "Enum",
            "Name": "sftp.MAX_CONNECT_TIMEOUT",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for maximum connection timeout."
          },
          {
            "Name": "sftp.MIN_CONNECT_TIMEOUT",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for minimum connection timeout.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.MAX_PORT_NUMBER",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the maximum port number.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.MIN_PORT_NUMBER",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the minimum port number.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.DEFAULT_PORT_NUMBER",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values for the default port number.",
            "Member Type": "Enum"
          },
          {
            "Name": "sftp.Sort",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the values to be used to sort the listed directory.\n                  Use this enum to set the value of the options.sort parameter of the Connection.list(options) method.",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/suiteAppInfo",
    [
      {
        "Name": "N/suiteAppInfo",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "suiteAppInfo.isBundleInstalled(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the specific bundle is installed."
          },
          {
            "Name": "suiteAppInfo.isSuiteAppInstalled(options)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the specified SDF SuiteApp is installed.",
            "Member Type": "Method"
          },
          {
            "Name": "suiteAppInfo.listBundlesContainingScripts(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns the IDs for bundles that contain the specified script, for each script specified.",
            "Member Type": "Method"
          },
          {
            "Name": "suiteAppInfo.listInstalledBundles()",
            "Return Type / Value Type": "Object[]",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a list of bundles that are installed.",
            "Member Type": "Method"
          },
          {
            "Name": "suiteAppInfo.listInstalledSuiteApps()",
            "Return Type / Value Type": "Object[]",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a list of SDF SuiteApps that are installed.",
            "Member Type": "Method"
          },
          {
            "Name": "suiteAppInfo.listSuiteAppsContainingScripts(options)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns the ID for the SDF SuiteApp that contains the specified script, for each script specified.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/task",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "task.CsvImportTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a CSV import task.\n                  Use the methods and properties for this object to submit a CSV import task into the task queue and asynchronously import record data into NetSuite."
          },
          {
            "Name": "task.CsvImportTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a CSV import task placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a merge duplicate records task request.\n                  Use the methods and properties of this object to submit a merge duplicate record job task into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.EntityDeduplicationTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a merge duplicate record task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A map/reduce script deployment.",
            "Member Type": "Object"
          },
          {
            "Name": "task.MapReduceScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a map/reduce script deployment that has been submitted for processing.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of a record action task.\n                  Use this object to place a record action task into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.RecordActionTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a record action task in the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties of a scheduled script task in SuiteScript.\n                  Use this object to place a scheduled script deployment into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.ScheduledScriptTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of a scheduled script placed into the NetSuite scheduling queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties required to initiate an asynchronous search.",
            "Member Type": "Object"
          },
          {
            "Name": "task.SearchTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous search initiation task that is placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "All the properties required to asynchronously initiate a workflow.\n                  Use WorkflowTriggerTask to create a task that initiates an instance of a specific workflow.",
            "Member Type": "Object"
          },
          {
            "Name": "task.WorkflowTriggerTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The status of an asynchronous workflow initiation task placed into the NetSuite task queue.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "task.checkStatus(options)",
            "Return Type / Value Type": "task.CsvImportTaskStatus | task.EntityDeduplicationTaskStatus | task.MapReduceScriptTaskStatus | task.RecordActionTaskStatus | task.ScheduledScriptTaskStatus | task.SearchTaskStatus |task.WorkflowTriggerTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Returns a task status object associated with a specific task ID."
          },
          {
            "Name": "task.create(options)",
            "Return Type / Value Type": "task.CsvImportTask | task.EntityDeduplicationTask | task.MapReduceScriptTask | task.RecordActionTask | task.ScheduledScriptTask | task.SearchTask | task.WorkflowTriggerTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an object for a specific task type and returns the task object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "task.ActionCondition",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible record action conditions. This enum is returned by RecordActionTask.condition."
          },
          {
            "Name": "task.DedupeEntityType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for entity types for which you can merge duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.DedupeMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for available deduplication modes when merging duplicate records with task.EntityDeduplicationTask.\n                  Use this enum to set the EntityDeduplicationTask.entityType.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MapReduceStage",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the stages of a map/reduce script deployment, which is encapsulated by the task.MapReduceScriptTask object.\n                  This enum is returned by MapReduceScriptTaskStatus.stage.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.MasterSelectionMode",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported master selection modes when merging duplicate records with task.EntityDeduplicationTask.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the possible status of tasks created and submitted with the N/task Module.\n                  Use this enum to set the EntityDeduplicationTask.masterSelectionMode property.",
            "Member Type": "Enum"
          },
          {
            "Name": "task.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for the types of task objects you can create using task.create(options).\n                  Use this enum to set the value for the options.taskType parameter of the task.create(options) method.",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/task/accounting/recognition",
    [
      {
        "Name": "N/task/accounting/recognition",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "recognition.MergeArrangementsTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a task to merge all of the revenue elements from a specified list of revenue arrangements.\n                    Use recognition.create(options) to create this object."
          },
          {
            "Name": "recognition.MergeArrangementsTaskStatus",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates the current status of a submitted merge task.\n                    Use recognition.checkStatus(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Name": "recognition.MergeElementsTask",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Encapsulates a task to merge all of the specified revenue elements.\n                    Use recognition.create(options) to create this object.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "recognition.checkStatus(options)",
            "Return Type / Value Type": "recognition.MergeArrangementsTaskStatus",
            "Supported Script Types": "Server scripts",
            "Description": "Checks the status of a submitted merge task."
          },
          {
            "Name": "recognition.create(options)",
            "Return Type / Value Type": "recognition.MergeArrangementsTask | recognition.MergeElementsTask",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a merge task that combines entire revenue arrangements or individual revenue elements.\n                    Use values in the recognition.TaskType enum to specify the type of merge task to create.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "recognition.TaskStatus",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported merge task statuses.\n                    This enum is used to represent the task status in a recognition.MergeArrangementsTaskStatus object."
          },
          {
            "Name": "recognition.TaskType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the string values for supported merge task types.\n                    This enum is used to pass the task type argument to recognition.create(options).",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "MergeArrangementsTask",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "MergeArrangementsTask.submit()",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Submits the merge task for processing.\n                    This method returns a task ID that uniquely identifies the merge task."
          },
          {
            "Member Type": "Property",
            "Name": "MergeArrangementsTask.arrangements",
            "Return Type / Value Type": "Array<number | string> (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds an array of internal IDs of the revenue arrangement records to merge."
          },
          {
            "Name": "MergeArrangementsTask.contractAcquisitionDeferredExpenseAccount",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "References the contract acquisition deferred expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\n                    The default value is the account specified by the accounting preference Contract Acquisition Deferred Expense Account in your account.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTask.contractAcquisitionExpenseAccount",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "References the contract acquisition expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\n                    The default value is the account specified by the accounting preference Contract Acquisition Expense Account in your account.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTask.contractCostAccrualDate",
            "Return Type / Value Type": "JavaScript Date (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the contract cost accrual date to use for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\n                    The default value is today’s date.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTask.mergeResidualRevenueAmounts",
            "Return Type / Value Type": "boolean (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates whether the revenue arrangements are merged prospectively. For more information about prospective merges, see Prospective Merges.\n                    The default value is false.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTask.recalculateResidualFairValue",
            "Return Type / Value Type": "boolean (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Indicates whether to recalculate the fair value on residual elements when revenue arrangements are prospectively merged. For more information about prospective merges, see Prospective Merges.\n                    This property can be set to true only if the MergeArrangementsTask.mergeResidualRevenueAmounts property is also set to true. The default value is false.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTask.revenueArrangementDate",
            "Return Type / Value Type": "JavaScript Date (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the date of the new revenue arrangement.\n                    The default value is today’s date.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "MergeArrangementsTaskStatus",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "MergeArrangementsTaskStatus.errorMessage",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds an error message that describes the failure of the merge task. This property is valid only if the value of the status property is TaskStatus.FAILED."
          },
          {
            "Name": "MergeArrangementsTaskStatus.inputArrangements",
            "Return Type / Value Type": "number[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds an array of internal IDs of the revenue arrangement records to merge. This property is valid only if the merge task was created using a task type of TaskType.MERGE_ARRANGEMENTS_TASK.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTaskStatus.inputElements",
            "Return Type / Value Type": "number[] (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds an array of internal IDs of the revenue elements to merge. This property is valid only if the merge task was created using a task type of TaskType.MERGE_ELEMENTS_TASK.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTaskStatus.resultingArrangement",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "References the internal ID of the new revenue arrangement that was created. This property is valid only if the value of the status property is TaskStatus.COMPLETE.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTaskStatus.status",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Represents the current status of the merge task.\n                    This property uses values in the recognition.TaskStatus enum.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTaskStatus.submissionId",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "References the submission ID of the merge arrangements bulk process.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeArrangementsTaskStatus.taskId",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds the task ID of the merge task. The task ID is assigned to the merge task when you call recognition.create(options).",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "MergeElementsTask",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "MergeElementsTask.submit()",
            "Return Type / Value Type": "number (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Submits the merge task for processing.\n                    This method returns a task ID that uniquely identifies the merge task."
          },
          {
            "Member Type": "Property",
            "Name": "MergeElementsTask.contractAcquisitionDeferredExpenseAccount",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "References the contract acquisition deferred expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\n                    The default value is the account specified by the accounting preference Contract Acquisition Deferred Expense Account in your account."
          },
          {
            "Name": "MergeElementsTask.contractAcquisitionExpenseAccount",
            "Return Type / Value Type": "number | string (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "References the contract acquisition expense account for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\n                    The default value is the account specified by the accounting preference Contract Acquisition Expense Account in your account.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeElementsTask.contractCostAccrualDate",
            "Return Type / Value Type": "JavaScript Date (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the contract cost accrual date to use for the new revenue arrangement. This property is valid only if the accounting preference Enable Advanced Cost Amortization is enabled. For more information, see Advanced Cost Amortization.\n                    The default value is today’s date.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeElementsTask.elements",
            "Return Type / Value Type": "Array<number | string> (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Holds an array of internal IDs of the revenue element records to merge.",
            "Member Type": "Property"
          },
          {
            "Name": "MergeElementsTask.revenueArrangementDate",
            "Return Type / Value Type": "JavaScript Date (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "Describes the date of the new revenue arrangement.\n                    The default value is today’s date.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  [
    "N/transaction",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "transaction.void(options)",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Voids a transaction record."
          },
          {
            "Name": "transaction.void.promise(options)",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Client and server scripts",
            "Description": "Voids a transaction record asynchronously.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "transaction.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for supported record types. This enum is used for the options.type parameter of the transaction.void(options) method."
          }
        ]
      }
    ]
  ],
  [
    "N/translation",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "translation.Handle",
            "Return Type / Value Type": "Object",
            "Supported Script Type": "Client and server scripts",
            "Description": "Encapsulates a Translation Collection for a locale."
          },
          {
            "Name": "translation.Translator",
            "Return Type / Value Type": "Object / Function",
            "Supported Script Type": "Client and server scripts",
            "Description": "Represents a translator function that returns translated strings. The translated strings include variables that are passed as parameters to the translator function.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "translation.get(options)",
            "Return Type / Value Type": "translation.Translator",
            "Supported Script Type": "Client and server scripts",
            "Description": "Creates a translator function for a key in the specified Translation Collection and locale."
          },
          {
            "Name": "translation.load(options)",
            "Return Type / Value Type": "translation.Handle",
            "Supported Script Type": "Client and server scripts",
            "Description": "Creates a translation.Handle object with translations for the specified Translation Collections and locales.",
            "Member Type": "Method"
          },
          {
            "Name": "translation.selectLocale(options)",
            "Return Type / Value Type": "translation.Handle",
            "Supported Script Type": "Client and server scripts",
            "Description": "Creates a translation.Handle object in the specified locale from an existing translation.Handle object.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "translation.Locale",
            "Return Type / Value Type": "enum",
            "Supported Script Type": "Client and server scripts",
            "Description": "Holds the supported locales for Translation Collections.\n                  Use this enum to pass the locale argument to translation.get(options) and translation.selectLocale(options)."
          }
        ]
      }
    ]
  ],
  ["N/ui/dialog", []],
  [
    "N/ui/message",
    [
      {
        "Name": "N/ui/",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "message.Message",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Encapsulates the Message object that gets created when calling the message.create(options) method."
          },
          {
            "Member Type": "Method",
            "Name": "message.create(options)",
            "Return Type / Value Type": "message.Message",
            "Supported Script Types": "Client scripts",
            "Description": "Creates a message that can be displayed or hidden near the top of the page."
          },
          {
            "Member Type": "Enum",
            "Name": "message.Type",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client scripts",
            "Description": "Indicates the type of message to create and display, which specifies the background color of the message and other message indicators.\n                    Use this enum to set the value of the options.type parameter of the message.create(options) method."
          }
        ]
      },
      {
        "Name": "Message",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Message.hide()",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Hides the message."
          },
          {
            "Name": "Message.show(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Client scripts",
            "Description": "Shows the message.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/ui/serverWidget",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "serverWidget.Assistant",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A scriptable, multi-step NetSuite assistant."
          },
          {
            "Name": "serverWidget.AssistantStep",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A step within a custom NetSuite assistant.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Button",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A button that appears in a UI object.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Field",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite field.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.FieldGroup",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A field group.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Form",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite form.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.List",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.ListColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets",
            "Description": "A list column.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Sublist",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite sublist.",
            "Member Type": "Object"
          },
          {
            "Name": "serverWidget.Tab",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "A NetSuite tab and subtabs.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "serverWidget.createAssistant(options)",
            "Return Type / Value Type": "serverWidget.Assistant",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new assistant object."
          },
          {
            "Name": "serverWidget.createForm(options)",
            "Return Type / Value Type": "serverWidget.Form",
            "Supported Script Types": "Suitelets",
            "Description": "Creates and returns a new form object.",
            "Member Type": "Method"
          },
          {
            "Name": "serverWidget.createList(options)",
            "Return Type / Value Type": "serverWidget.List",
            "Supported Script Types": "Suitelets",
            "Description": "Creates a List object (specifying the title, and whether to hide the navigation bar).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "serverWidget.AssistantSubmitAction",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for submit actions performed by the user. This enum is used to set the value of the Assistant.getLastAction()."
          },
          {
            "Name": "serverWidget.FieldBreakType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field break types. This enum is used to set the value of the Field.updateBreakType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported field display types. This enum is used to set the value of the Field.updateDisplayType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldLayoutType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for the supported types of field layouts. This enum is used to set the value of the Field.updateLayoutType(options) property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FieldType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the values for supported field types. This enum is used to set the value of the type parameter when Form.addField(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.FormPageLinkType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported page link types on a form. This enum is used to set the value of the type parameter for Form.addPageLink(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.LayoutJustification",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported justification layouts. This enum is used to set the value of the align parameter when List.addColumn(options) is called.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.ListStyle",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets",
            "Description": "Holds the string values for supported list styles. This enum is used to set the value of the List.style property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistDisplayType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for supported sublist display types. This enum is used to set the value of the Sublist.displayType property.",
            "Member Type": "Enum"
          },
          {
            "Name": "serverWidget.SublistType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Suitelets and beforeLoad user events",
            "Description": "Holds the string values for valid sublist types. This enum is used to define the type parameter when Form.addSublist(options) is called.",
            "Member Type": "Enum"
          }
        ]
      }
    ]
  ],
  [
    "N/url",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "url.format(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Converts (serializes) URL query parameters into a string."
          },
          {
            "Name": "url.resolveDomain(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns a domain name for a NetSuite account.",
            "Member Type": "Method"
          },
          {
            "Name": "url.resolveRecord(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns an internal URL to a NetSuite record.",
            "Member Type": "Method"
          },
          {
            "Name": "url.resolveScript(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns an external or internal URL to a script.",
            "Member Type": "Method"
          },
          {
            "Name": "url.resolveTaskLink(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns an internal URL for a tasklink.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "url.HostType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values that describe a category of domain name. Use this enum to set the value of the hostType parameter of the url.resolveDomain(options) method."
          }
        ]
      }
    ]
  ],
  [
    "N/util",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "util.each(iterable, callback)",
            "Return Type / Value Type": "Object or Array",
            "Supported Script Types": "Client and server scripts",
            "Description": "Iterates over each member in an Object or Array."
          },
          {
            "Name": "util.extend(receiver, contributor)",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Copies the properties in a source object to a destination object.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isArray(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript Array object and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isAsyncFunction(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is JavaScript Async Function and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isBoolean(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript Boolean and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isDate(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript Date object and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isFunction(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript Function or Async Function and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isNumber(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript Number object or a value that evaluates to a Number object, and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isObject(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a plain JavaScript object (new Object() or {} for example), and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isRegExp(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript RegExp object or a value that evaluates to a RegExp object, and false otherwise.",
            "Member Type": "Method"
          },
          {
            "Name": "util.isString(obj)",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Client and server scripts",
            "Description": "Returns true if the obj parameter is a JavaScript String object or a value that evaluates to a String object, and false otherwise.",
            "Member Type": "Method"
          }
        ]
      }
    ]
  ],
  [
    "N/workbook",
    [
      {
        "Name": "N/workbook",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "workbook.Aspect",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "An aspect."
          },
          {
            "Name": "workbook.CalculatedMeasure",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A calculated measure.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Category",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A chart category.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Chart",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A chart.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ChartAxis",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A chart axis object which is used when you create a category or a legend.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ChildNodesSelector",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A selector for child nodes.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Color",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A color.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ConditionalFilter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A conditional filter.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ConditionalFormat",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A conditional format.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ConditionalFormatRule",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A conditional format rule.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Currency",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A currency amount and currency type.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DataDimension",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A data dimension.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DataDimensionItem",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A data dimension item.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DataDimensionItemValue",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The value of a data dimension item.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DataDimensionValue",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The value of a data dimension.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DataMeasure",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A data measure.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DescendantorSelfNodesSelector",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A selector for descendant or self nodes.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.DimensionSelector",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A dimension selector.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Duration",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A duration.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Expression",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "An expression.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.FieldContext",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A field context.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.FontSize",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A font size.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Legend",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A chart legend.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.LimitingFilter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A limiting filter.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.MeasureSelector",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A measure selector.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.MeasureValue",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A measure value.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.MeasureValueSelector",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A measure value selector.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.PathSelector",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A path selector.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Pivot",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A pivot definition. A pivot is a workbook component that enables you to pivot your dataset query results by defining measures and dimensions, so that you can analyze different subsets of data.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.PivotAxis",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A pivot axis.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.PivotIntersection",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A pivot intersection.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.PositionPercent",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A position defined by percentages of the x and y axes.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.PositionUnits",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A position defined by units.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.PositionValues",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A position defined by horizontal and vertical position values.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Range",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A date or date-time range.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Record",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A record.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.RecordKey",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A record key.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ReportStyle",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A report style.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.ReportStyleRule",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A report style rule.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Section",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A workbook section.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.SectionValue",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A section value.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Series",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A series in a workbook. A series is used when you create a chart definition.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Sort",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A sort.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.SortByDataDimensionItem",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A sort based on a data dimension item.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.SortByMeasure",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A sort based on a measure.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.SortDefinition",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A sort definition.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Style",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A style.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Table",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A table.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.TableColumn",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A table column.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.TableColumnCondition",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "Condition for a table view column.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.TableColumnFilter",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A table column filter.",
            "Member Type": "Object"
          },
          {
            "Name": "workbook.Workbook",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "A workbook. Workbooks are where you analyze the results of your dataset queries using different components, such as table views and pivots. All workbooks are based on a dataset, and a single dataset can be used as the basis for multiple workbooks.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "workbook.create(options)",
            "Return Type / Value Type": "workbook.Workbook",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a workbook. Workbooks are where you analyze the results of your dataset queries using different components, such as table views and pivots. All workbooks are based on a dataset, and a single dataset can be used as the basis for multiple workbooks."
          },
          {
            "Name": "workbook.createAspect(options)",
            "Return Type / Value Type": "workbook.Aspect",
            "Supported Script Types": "server scripts",
            "Description": "Creates an aspect for a chart series. An aspect includes a measure and an aspect type.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createCalculatedMeasure(options)",
            "Return Type / Value Type": "workbook.CalculatedMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a calculated measure.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createCategory(options)",
            "Return Type / Value Type": "workbook.Category",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a chart category, which includes an axis, a data root, and a sort definition. A chart category is used in a workbook.Chart.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createChart(options)",
            "Return Type / Value Type": "workbook.Chart",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a chart.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createChartAxis(options)",
            "Return Type / Value Type": "workbook.ChartAxis",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an X-axis or a Y-axis for the chart.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createColor(options)",
            "Return Type / Value Type": "workbook.Color",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a color.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createComplexRecordKey",
            "Return Type / Value Type": "workbook.RecordKey",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a complex RecordKey object from another object.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createConditionalFilter(options)",
            "Return Type / Value Type": "workbook.ConditionalFilter",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a conditional filter.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createConditionalFormat(options)",
            "Return Type / Value Type": "workbook.ConditionalFormat",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a conditional format.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createConditionalFormatRule(options)",
            "Return Type / Value Type": "workbook.ConditionalFormatRule",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a conditional format rule.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createConstant(options)",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a constant expression.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createCurrency(options)",
            "Return Type / Value Type": "workbook.Currency",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a currency.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createDataDimension(options)",
            "Return Type / Value Type": "workbook.DataDimension",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a data dimension.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createDataDimensionItem(options)",
            "Return Type / Value Type": "workbook.DataDimensionItem",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a data dimension item.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createDataMeasure(options)",
            "Return Type / Value Type": "workbook.DataMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a data measure.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createDimensionSelector(options)",
            "Return Type / Value Type": "workbook.DimensionSelector",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a dimension selector.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createDuration(options)",
            "Return Type / Value Type": "workbook.Duration",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a duration.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createExpression(options)",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "Creates an expression.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createFieldContext(options)",
            "Return Type / Value Type": "workbook.FieldContext",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a field context for table column.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createFontSize(options)",
            "Return Type / Value Type": "workbook.FontSize",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a font size.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createLegend(options)",
            "Return Type / Value Type": "workbook.Legend",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a chart legend.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createLimitingFilter(options)",
            "Return Type / Value Type": "workbook.LimitingFilter",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a limiting filter.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createMeasureSelector(options)",
            "Return Type / Value Type": "workbook.MeasureSelector",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a measure selector.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createMeasureValueSelector(options)",
            "Return Type / Value Type": "workbook.MeasureValueSelector",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a measure value selector.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createPathSelector(options)",
            "Return Type / Value Type": "workbook.PathSelector",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a path selector.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createPivot(options)",
            "Return Type / Value Type": "workbook.Pivot",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a pivot definition. A pivot is a workbook component that enables you to pivot your dataset query results by defining measures and dimensions, so that you can analyze different subsets of data.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createPivotAxis(options)",
            "Return Type / Value Type": "workbook.PivotAxis",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a pivot axis, which includes a data root and a sort definition.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createPositionPercent(options)",
            "Return Type / Value Type": "workbook.PositionPercent",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a position defined by percentages of the x and y axes.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createPositionUnits(options)",
            "Return Type / Value Type": "workbook.PositionUnits",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a position defined by units.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createPositionValues(options)",
            "Return Type / Value Type": "workbook.PositionValues",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a position defined by horizontal and vertical position values.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createRange(options)",
            "Return Type / Value Type": "workbook.Range",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a range.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createReportStyle(options)",
            "Return Type / Value Type": "workbook.ReportStyle",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a report style.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createReportStyleRule(options)",
            "Return Type / Value Type": "workbook.ReportStyleRule",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a report style rule.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSection(options)",
            "Return Type / Value Type": "workbook.Section",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a section.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSeries(options)",
            "Return Type / Value Type": "workbook.Series",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a chart series, which is a set of aspects.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSimpleRecordKey",
            "Return Type / Value Type": "workbook.RecordKey",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a record key.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSort(options)",
            "Return Type / Value Type": "workbook.Sort",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a sort.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSortByDataDimensionItem(options)",
            "Return Type / Value Type": "workbook.SortByDataDimensionItem",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a sort based on a data dimension item.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSortByMeasure(options)",
            "Return Type / Value Type": "workbook.SortByMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a sort based on a measure.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createSortDefinition(options)",
            "Return Type / Value Type": "workbook.SortDefinition",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a sort definition.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createStyle(options)",
            "Return Type / Value Type": "workbook.Style",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a style.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createTable(options)",
            "Return Type / Value Type": "workbook.Table",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a table view.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createTableColumn(options)",
            "Return Type / Value Type": "workbook.TableColumn",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a table column.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createTableColumnCondition(options)",
            "Return Type / Value Type": "workbook.TableColumnCondition",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a table column condition.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createTableColumnFilter(options)",
            "Return Type / Value Type": "workbook.TableColumnFilter",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a table filter.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.createTranslation(options)",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "Creates a translation (a translation expression).",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.list()",
            "Return Type / Value Type": "Object[]",
            "Supported Script Types": "Server scripts",
            "Description": "Lists all existing workbooks.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.listPaged(options)",
            "Return Type / Value Type": "PagedInfoData",
            "Supported Script Types": "Server scripts",
            "Description": "Retrieves a set of pages with metadata about workbooks.",
            "Member Type": "Method"
          },
          {
            "Name": "workbook.loadWorkbook(options)",
            "Return Type / Value Type": "workbook.Workbook",
            "Supported Script Types": "Server scripts",
            "Description": "Loads an existing workbook.",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "workbook.Aggregation",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for aggregation types. Used to set the value of the options.aggregation parameter of the workbook.createDataMeasure(options) method."
          },
          {
            "Name": "workbook.AspectType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for aspect types. Used to set the options.type parameter of the workbook.createAspect(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.ChartType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for chart types. Used to pass the type value to workbook.createChart(options)",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.Color",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for colors. Used to set the options.backgroundcolor, options.color, and options.textDecorationColor parameters of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.ConstantType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for constant types. Used to set the value of the options.type parameter of the workbook.createConstant(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.DateTimeHierarchy",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for workbook date-time hierarchy types.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.DateTimeProperty",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for workbook date-time property types.\n                    Used to set the value of the DATE_TIME_PROPERTY in workbook.ExpressionType.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.ExpressionType",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for workbook expression types. Use these values for the options.functionId parameter when creating an expression using workbook.createExpression(options)",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.FontSize",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for font sizes. Used to set the value for the options.fontSize parameter of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.FontStyle",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for font sizes. Used to set the value for the options.fontSize parameter of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.FontWeight",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for font weights. Used to set the value for the options.fontWeight parameter of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.Image",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for images that you can use in workbooks. Used as a value for the Style.backgroundImage property.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.Position",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for positions. Used to set the value for the PositionValues.horizontal and PositionValues.vertical properties.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.Stacking",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds stacking types. Used to pass the stacking value to workbook.createChart(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.TemporalUnit",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for temporal units, such as hours or minutes. Used to set the value of the options.start and options.end parameters of the workbook.createDuration(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.TextAlign",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for text alignments. Used to set the value for the options.textAlign parameter of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.TextDecorationLine",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for text decoration line types, such as underline and strikethrough. Used to set the value for the options.textDecorationLine parameter of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.TextDecorationStyle",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for text decoration line styles, such as solid and dashed. Used to set the value for the options.textDecoractionStyle parameter of the workbook.createStyle(options) method.",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.TotalLine",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for predefined total line formats. Used to pass the totalLine value to workbook.createDataDimension(options) and to workbook.createSection(options).",
            "Member Type": "Enum"
          },
          {
            "Name": "workbook.Unit",
            "Return Type / Value Type": "enum",
            "Supported Script Types": "Server scripts",
            "Description": "Holds string values for units of measurement. Used to set the options.unit parameter in the workbook.createPositionUnits(options) method.",
            "Member Type": "Enum"
          }
        ]
      },
      {
        "Name": "Aspect",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Aspect.measure",
            "Return Type / Value Type": "workbook.CalculatedMeasure | workbook.DataMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "The measure of the aspect."
          },
          {
            "Name": "Aspect.type",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The type of the aspect.\n                    Set this value using workbook.AspectType.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "CalculatedMeasure",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "CalculatedMeasure.expression",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The expression for the calculated measure."
          },
          {
            "Name": "CalculatedMeasure.label",
            "Return Type / Value Type": "string | workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The label of the calculated measure.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Category",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Category.axis",
            "Return Type / Value Type": "workbook.ChartAxis",
            "Supported Script Types": "Server scripts",
            "Description": "The axis of the category."
          },
          {
            "Name": "Category.root",
            "Return Type / Value Type": "workbook.DataDimension | workbook.Section",
            "Supported Script Types": "Server scripts",
            "Description": "The section or data dimension (that is, the fields for the x-axis).",
            "Member Type": "Property"
          },
          {
            "Name": "Category.sortDefinitions",
            "Return Type / Value Type": "workbook.SortDefinition[]",
            "Supported Script Types": "Server scripts",
            "Description": "The sort definitions of the category.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "ChartAxis",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ChartAxis.title",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The title of the chart axis."
          }
        ]
      },
      {
        "Name": "Chart",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Chart.aggregationFilters",
            "Return Type / Value Type": "Array<workbook.LimitingFilter | workbook.ConditionalFilter>",
            "Supported Script Types": "Server scripts",
            "Description": "Limiting and conditional filters for the chart."
          },
          {
            "Name": "Chart.category",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The category of the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.dataset",
            "Return Type / Value Type": "dataset.Dataset",
            "Supported Script Types": "Server scripts",
            "Description": "The underlying dataset for the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.filterExpressions",
            "Return Type / Value Type": "workbook.Expression[]",
            "Supported Script Types": "Server scripts",
            "Description": "The filter expressions of the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.legend",
            "Return Type / Value Type": "workbook.Legend",
            "Supported Script Types": "Server scripts",
            "Description": "The legend of the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.series",
            "Return Type / Value Type": "workbook.Series",
            "Supported Script Types": "Server scripts",
            "Description": "The series of the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.stacking",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The stacking type for the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.subTitle",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The subtitle of the chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.title",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The title of chart.",
            "Member Type": "Property"
          },
          {
            "Name": "Chart.type",
            "Return Type / Value Type": "workbook.ChartType",
            "Supported Script Types": "Server scripts",
            "Description": "The type of the chart.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Color",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Color.alpha",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The opacity, or transparency, of the color."
          },
          {
            "Name": "Color.blue",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The blue portion of the color.",
            "Member Type": "Property"
          },
          {
            "Name": "Color.green",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The green portion of the color.",
            "Member Type": "Property"
          },
          {
            "Name": "Color.red",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The red portion of the color.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "ConditionalFilter",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ConditionalFilter.columnSelector",
            "Return Type / Value Type": "workbook.DescendantorSelfNodesSelector| workbook.PathSelector | workbook.DimensionSelector | workbook.ChildNodesSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The column selector."
          },
          {
            "Name": "ConditionalFilter.filteredNodesSelector",
            "Return Type / Value Type": "workbook.PathSelector | workbook.DimensionSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The selected filters.",
            "Member Type": "Property"
          },
          {
            "Name": "ConditionalFilter.measure",
            "Return Type / Value Type": "workbook.CalculatedMeasure | workbook.DataMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "The measure of the filter.",
            "Member Type": "Property"
          },
          {
            "Name": "ConditionalFilter.otherAxisSelector",
            "Return Type / Value Type": "workbook.PathSelector | workbook.DimensionSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The filter selector for the other axis.",
            "Member Type": "Property"
          },
          {
            "Name": "ConditionalFilter.predicate",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The actual predicate which indicates if the condition is met.",
            "Member Type": "Property"
          },
          {
            "Name": "ConditionalFilter.row",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "The row axis indicator.",
            "Member Type": "Property"
          },
          {
            "Name": "ConditionalFilter.rowSelector",
            "Return Type / Value Type": "workbook.DescendantorSelfNodesSelector| workbook.PathSelector | workbook.DimensionSelector | workbook.ChildNodesSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The row selector.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "ConditionalFormat",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ConditionalFormat.rules",
            "Return Type / Value Type": "workbook.ConditionalFormatRule[]",
            "Supported Script Types": "Server scripts",
            "Description": "The conditional formatting rules that are included in the conditional format."
          }
        ]
      },
      {
        "Name": "ConditionalFormatRule",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ConditionalFormatRule.filter",
            "Return Type / Value Type": "workbook.TableColumnFilter",
            "Supported Script Types": "Server scripts",
            "Description": "The filter that determines which rows or cells to apply the conditional format to."
          },
          {
            "Name": "ConditionalFormatRule.style",
            "Return Type / Value Type": "workbook.Style",
            "Supported Script Types": "Server scripts",
            "Description": "The style to apply as the conditional format.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Currency",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Currency.amount",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The amount of the currency."
          },
          {
            "Name": "Currency.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the currency (for example, USD, EUR, GBP, and so on).",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "DataDimension",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "DataDimension.children",
            "Return Type / Value Type": "Array<workbook.DataDimension | workbook.Section>",
            "Supported Script Types": "Server scripts",
            "Description": "The children of the data dimension."
          },
          {
            "Name": "DataDimension.items",
            "Return Type / Value Type": "workbook.DataDimensionItem[]",
            "Supported Script Types": "Server scripts",
            "Description": "The items of the data dimension.",
            "Member Type": "Property"
          },
          {
            "Name": "DataDimension.totalLine",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The formatting option for the total line.\n                    Set this value using workbook.TotalLine.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "DataDimensionItem",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "DataDimensionItem.expression",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The expression of data dimension item."
          },
          {
            "Name": "DataDimensionItem.label",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The label of the data dimension item.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "DataDimensionItemValue",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "DataDimensionItemValue.item",
            "Return Type / Value Type": "workbook.DataDimensionItem",
            "Supported Script Types": "Server scripts",
            "Description": "The data dimension item."
          },
          {
            "Name": "DataDimensionItemValue.value",
            "Return Type / Value Type": "string | number | boolean | workbook.Record | workbook.Currency | workbook.Range | workbook.Duration",
            "Supported Script Types": "Server scripts",
            "Description": "The value of the data dimension item.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "DataDimensionValue",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "DataDimensionValue.dataDimension",
            "Return Type / Value Type": "workbook.DataDimension",
            "Supported Script Types": "Server scripts",
            "Description": "The data dimension."
          },
          {
            "Name": "DataDimensionValue.itemValues",
            "Return Type / Value Type": "workbook.DataDimensionItemValue[]",
            "Supported Script Types": "Server scripts",
            "Description": "The item values for the data dimension.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "DataMeasure",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "DataMeasure.aggregation",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The aggregation of the data measure."
          },
          {
            "Name": "DataMeasure.expression",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The expression for the data measure.\n                    This property is used if the data measure is a single-expression measure.",
            "Member Type": "Property"
          },
          {
            "Name": "DataMeasure.expressions",
            "Return Type / Value Type": "workbook.Expression[]",
            "Supported Script Types": "Server scripts",
            "Description": "The expressions for the data measure.\n                    This property is used if the data measure is a multiple-expression measure.",
            "Member Type": "Property"
          },
          {
            "Name": "DataMeasure.label",
            "Return Type / Value Type": "string | workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The label of the data measure.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "DimensionSelector",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "DimensionSelector.dimension",
            "Return Type / Value Type": "workbook.DataDimension | workbook.Section",
            "Supported Script Types": "Server scripts",
            "Description": "The dimension of the dimension selector."
          }
        ]
      },
      {
        "Name": "Duration",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Duration.amount",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The amount of the duration."
          },
          {
            "Name": "Duration.units",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The units of the duration.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Expression",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Expression.functionId",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the function used in the expression."
          },
          {
            "Name": "Expression.parameters",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The parameters of the expression.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "FieldContext",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "FieldContext.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the field context (for example, DISPLAY or CONSOLIDATED)"
          },
          {
            "Name": "FieldContext.parameters",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The parameters of the field context.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "FontSize",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "FontSize.size",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The numeric size of the font size."
          },
          {
            "Name": "FontSize.unit",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The unit of the font size.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Legend",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Legend.axes",
            "Return Type / Value Type": "workbook.ChartAxis[]",
            "Supported Script Types": "Server scripts",
            "Description": "The axes of the legend."
          },
          {
            "Name": "Legend.root",
            "Return Type / Value Type": "workbook.DataDimension | workbook.Section",
            "Supported Script Types": "Server scripts",
            "Description": "The section or data dimension (that is., the fields for the y-axis).",
            "Member Type": "Property"
          },
          {
            "Name": "Legend.sortDefinitions",
            "Return Type / Value Type": "workbook.SortDefinition[]",
            "Supported Script Types": "Server scripts",
            "Description": "The sort definitions of the legend.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "LimitingFilter",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "LimitingFilter.filteredNodesSelector",
            "Return Type / Value Type": "workbook.PathSelector | workbook.DimensionSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The selected filter."
          },
          {
            "Name": "LimitingFilter.limit",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The limit number for the filter.",
            "Member Type": "Property"
          },
          {
            "Name": "LimitingFilter.row",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "The row axis indicator for the filter.",
            "Member Type": "Property"
          },
          {
            "Name": "LimitingFilter.sortBys",
            "Return Type / Value Type": "Array<workbook.SortByDataDimensionItem | workbook.SortByMeasure>",
            "Supported Script Types": "Server scripts",
            "Description": "The ordering elements of the filter.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "MeasureSelector",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "MeasureSelector.measures",
            "Return Type / Value Type": "workbook.CalculatedMeasure[] | workbook.DataMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "The measures for the measure selector."
          }
        ]
      },
      {
        "Name": "MeasureValue",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "MeasureValue.measure",
            "Return Type / Value Type": "workbook.MeasureValue",
            "Supported Script Types": "Server scripts",
            "Description": "The measure to use for the measure value."
          },
          {
            "Name": "MeasureValue.value",
            "Return Type / Value Type": "string | number | boolean | workbook.Record | workbook.Currency | workbook.Range | workbook.Duration",
            "Supported Script Types": "Server scripts",
            "Description": "The value to use for the measure value.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "MeasureValueSelector",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "MeasureValueSelector.columnSelector",
            "Return Type / Value Type": "workbook.DimensionSelector | workbook.PathSelector | workbook.DescendantorSelfNodesSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The column selector."
          },
          {
            "Name": "MeasureValueSelector.measureSelector",
            "Return Type / Value Type": "workbook.MeasureSelector[]",
            "Supported Script Types": "Server scripts",
            "Description": "The measure selectors.",
            "Member Type": "Property"
          },
          {
            "Name": "MeasureValueSelector.rowSelector",
            "Return Type / Value Type": "workbook.DimensionSelector | workbook.PathSelector | workbook.DescendantorSelfNodesSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The row selector.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PathSelector",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PathSelector.elements",
            "Return Type / Value Type": "workbook.DimensionSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The elements denoting 'xpath' of the selector."
          }
        ]
      },
      {
        "Name": "PivotAxis",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PivotAxis.root",
            "Return Type / Value Type": "workbook.DataDimension | workbook.Section",
            "Supported Script Types": "Server scripts",
            "Description": "The data for the pivot axis."
          },
          {
            "Name": "PivotAxis.sortDefinitions",
            "Return Type / Value Type": "workbook.SortDefinition[]",
            "Supported Script Types": "Server scripts",
            "Description": "The sort definitions of the pivot axis.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Pivot",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Pivot.aggregationFilters",
            "Return Type / Value Type": "Array<workbook.ConditionalFilter |workbook.LimitingFilter>",
            "Supported Script Types": "Server scripts",
            "Description": "The limiting and conditional filters of the pivot definition."
          },
          {
            "Name": "Pivot.columnAxis",
            "Return Type / Value Type": "workbook.PivotAxis",
            "Supported Script Types": "Server scripts",
            "Description": "The column axis of the pivot definition.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.dataset",
            "Return Type / Value Type": "dataset.Dataset",
            "Supported Script Types": "Server scripts",
            "Description": "The underlying dataset of the pivot definition.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.datasetLink",
            "Return Type / Value Type": "datasetLink.DatasetLink",
            "Supported Script Types": "Server scripts",
            "Description": "Underlying dataset for the pivot.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.filterExpressions",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The filter expressions of the pivot definition.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the pivot definition.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the pivot definition.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.portletName",
            "Return Type / Value Type": "string | workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the portlet for the pivot.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.reportStyles",
            "Return Type / Value Type": "workbook.ReportStyle[]",
            "Supported Script Types": "Server scripts",
            "Description": "Report styles for the pivot.",
            "Member Type": "Property"
          },
          {
            "Name": "Pivot.rowAxis",
            "Return Type / Value Type": "workbook.PivotAxis",
            "Supported Script Types": "Server scripts",
            "Description": "The row axis of the pivot definition.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PivotIntersection",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PivotIntersection.column",
            "Return Type / Value Type": "workbook.DataDimensionValue | workbook.SectionValue",
            "Supported Script Types": "Server scripts",
            "Description": "The column dimension value."
          },
          {
            "Name": "PivotIntersection.measureValues",
            "Return Type / Value Type": "workbook.MeasureValue[]",
            "Supported Script Types": "Server scripts",
            "Description": "The measure values in the pivot intersection.",
            "Member Type": "Property"
          },
          {
            "Name": "PivotIntersection.row",
            "Return Type / Value Type": "workbook.DataDimensionValue | workbook.SectionValue",
            "Supported Script Types": "Server scripts",
            "Description": "The row dimension value.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PositionPercent",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PositionPercent.percentX",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The percentage of the x dimension."
          },
          {
            "Name": "PositionPercent.percentY",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The percentage of the y dimension.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PositionUnits",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PositionUnits.unit",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The units for the position."
          },
          {
            "Name": "PositionUnits.x",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The x value of the position.",
            "Member Type": "Property"
          },
          {
            "Name": "PositionUnits.y",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The y value of the position.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "PositionValues",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "PositionValues.horizontal",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The horizontal value of the position."
          },
          {
            "Name": "PositionValues.vertical",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The vertical value of the position.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Range",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Range.end",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The end date or date-time of the range."
          },
          {
            "Name": "Range.start",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The start date or date-time of the range.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Record",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Record.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the record type for the record."
          },
          {
            "Name": "Record.primaryKey",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The primary key of the record.",
            "Member Type": "Property"
          },
          {
            "Name": "Record.properties",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of the record.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "RecordKey",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "RecordKey.properties",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Server scripts",
            "Description": "The properties of the record key."
          }
        ]
      },
      {
        "Name": "ReportStyle",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ReportStyle.rules",
            "Return Type / Value Type": "workbook.ReportStyleRule[]",
            "Supported Script Types": "Server scripts",
            "Description": "The formatting rules for the report style."
          },
          {
            "Name": "ReportStyle.selectors",
            "Return Type / Value Type": "workbook.MeasureValueSelector[]",
            "Supported Script Types": "Server scripts",
            "Description": "The selectors for the report style.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "ReportStyleRule",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "ReportStyleRule.expression",
            "Return Type / Value Type": "workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "A boolean expression indicating whether the style should be applied."
          },
          {
            "Name": "ReportStyleRule.style",
            "Return Type / Value Type": "workbook.Style",
            "Supported Script Types": "Server scripts",
            "Description": "The style to be applied.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Section",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Section.children",
            "Return Type / Value Type": "Array<workbook.CalculatedMeasure | workbook.DataMeasure | workbook.DataDimension | workbook.DataDimensionItem>",
            "Supported Script Types": "Server scripts",
            "Description": "The children of the section."
          },
          {
            "Name": "Section.totalLine",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The formatting option for the total line.\n                    Set this value using workbook.TotalLine.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "SectionValue",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "SectionValue.section",
            "Return Type / Value Type": "workbook.Section",
            "Supported Script Types": "Server scripts",
            "Description": "The section of the section value."
          }
        ]
      },
      {
        "Name": "Series",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Series.aspects",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The aspects for the series."
          }
        ]
      },
      {
        "Name": "Sort",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Sort.ascending",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "When set to true, indicates the sort is in ascending order."
          },
          {
            "Name": "Sort.caseSensitive",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "When set to true, indicates the sort is case sensitive.",
            "Member Type": "Property"
          },
          {
            "Name": "Sort.locale",
            "Return Type / Value Type": "query.SortLocale (read-only)",
            "Supported Script Types": "Server scripts",
            "Description": "The locale of the sort.",
            "Member Type": "Property"
          },
          {
            "Name": "Sort.nullsLast",
            "Return Type / Value Type": "boolean",
            "Supported Script Types": "Server scripts",
            "Description": "When set to true, indicates that nulls are placed last in the sort.",
            "Member Type": "Property"
          },
          {
            "Name": "Sort.order",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "Sort order indicator.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "SortDefinition",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "SortDefinition.selector",
            "Return Type / Value Type": "workbook.DimensionSelector | workbook.PathSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The selector for the sort definition."
          },
          {
            "Name": "SortDefinition.sortBys",
            "Return Type / Value Type": "Array<workbook.SortByDataDimensionItem | workbook.SortByMeasure>",
            "Supported Script Types": "Server scripts",
            "Description": "The sort order for the sort definition.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "SortByDataDimensionItem",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "SortByDataDimensionItem.item",
            "Return Type / Value Type": "workbook.DataDimensionItem",
            "Supported Script Types": "Server scripts",
            "Description": "The data dimension item to use for the sort."
          },
          {
            "Name": "SortByDataDimensionItem.sort",
            "Return Type / Value Type": "workbook.Sort",
            "Supported Script Types": "Server scripts",
            "Description": "The sort to use.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "SortByMeasure",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "SortByMeasure.measure",
            "Return Type / Value Type": "workbook.CalculatedMeasure | workbook.DataMeasure",
            "Supported Script Types": "Server scripts",
            "Description": "The measure for the sort."
          },
          {
            "Name": "SortByMeasure.otherAxisSelector",
            "Return Type / Value Type": "workbook.DescendantorSelfNodesSelector | workbook.PathSelector | workbook.DimensionSelector",
            "Supported Script Types": "Server scripts",
            "Description": "The selector for the axis that is not defined in the associated sort definition.",
            "Member Type": "Property"
          },
          {
            "Name": "SortByMeasure.sort",
            "Return Type / Value Type": "workbook.Sort",
            "Supported Script Types": "Server scripts",
            "Description": "The sort to use.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Style",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Style.backgroundColor",
            "Return Type / Value Type": "string | workbook.Color",
            "Supported Script Types": "Server scripts",
            "Description": "The background color of the style."
          },
          {
            "Name": "Style.backgroundImage",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The background image of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.backgroundPosition",
            "Return Type / Value Type": "workbook.PositionPercent | workbook.PositionUnits | workbook.PositionValues",
            "Supported Script Types": "Server scripts",
            "Description": "The background position of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.color",
            "Return Type / Value Type": "string | workbook.Color",
            "Supported Script Types": "Server scripts",
            "Description": "The color of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.fontSize",
            "Return Type / Value Type": "string | workbook.FontSize",
            "Supported Script Types": "Server scripts",
            "Description": "The font size of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.fontStyle",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The font style of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.fontWeight",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The font weight of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.textAlign",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The text alignment of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.textDecorationColor",
            "Return Type / Value Type": "string | workbook.Color",
            "Supported Script Types": "Server scripts",
            "Description": "The text decoration color of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.textDecorationLine",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The text decoration line of the style.",
            "Member Type": "Property"
          },
          {
            "Name": "Style.textDecorationStyle",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The text decoration style of the style.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Table",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "Table.columns",
            "Return Type / Value Type": "workbook.TableColumn",
            "Supported Script Types": "Server scripts",
            "Description": "The columns in the table view."
          },
          {
            "Name": "Table.dataset",
            "Return Type / Value Type": "dataset.Dataset",
            "Supported Script Types": "Server scripts",
            "Description": "The dataset for the table view.",
            "Member Type": "Property"
          },
          {
            "Name": "Table.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the table view.",
            "Member Type": "Property"
          },
          {
            "Name": "Table.name",
            "Return Type / Value Type": "string | workbook.Expression",
            "Supported Script Types": "Server scripts",
            "Description": "The label of the table view.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "TableColumn",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "TableColumn.alias",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The alias for the table column."
          },
          {
            "Name": "TableColumn.datasetColumnAlias",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The alias of the dataset column from which the table column was created.",
            "Member Type": "Property"
          },
          {
            "Name": "TableColumn.fieldContext",
            "Return Type / Value Type": "workbook.FieldContext",
            "Supported Script Types": "Server scripts",
            "Description": "The field context for the field used in the table column.",
            "Member Type": "Property"
          },
          {
            "Name": "TableColumn.filters",
            "Return Type / Value Type": "workbook.TableColumnFilter",
            "Supported Script Types": "Server scripts",
            "Description": "The filters for the table column.",
            "Member Type": "Property"
          },
          {
            "Name": "TableColumn.label",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The label for the table column.",
            "Member Type": "Property"
          },
          {
            "Name": "TableColumn.sort",
            "Return Type / Value Type": "workbook.Sort",
            "Supported Script Types": "Server scripts",
            "Description": "The sort for the table column.",
            "Member Type": "Property"
          },
          {
            "Name": "TableColumn.width",
            "Return Type / Value Type": "number",
            "Supported Script Types": "Server scripts",
            "Description": "The desired width of the table column when displayed in the UI.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "TableColumnCondition",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "TableColumnCondition.filters",
            "Return Type / Value Type": "workbook.TableColumnFilter[]",
            "Supported Script Types": "Server scripts",
            "Description": "The filters for the condition"
          },
          {
            "Name": "TableColumnCondition.operator",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The operator for the condition.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "TableColumnFilter",
        "Table": [
          {
            "Member Type": "Property",
            "Name": "TableColumnFilter.operator",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The operator for the table column filter."
          },
          {
            "Name": "TableColumnFilter.values",
            "Return Type / Value Type": "Array<null | Object | boolean | number | string | Date>",
            "Supported Script Types": "Server scripts",
            "Description": "The values for the table column filter.",
            "Member Type": "Property"
          }
        ]
      },
      {
        "Name": "Workbook",
        "Table": [
          {
            "Member Type": "Method",
            "Name": "Workbook.runPivot(options)",
            "Return Type / Value Type": "workbook.PivotIntersection[]",
            "Supported Script Types": "Server scripts",
            "Description": "Runs a pivot in the workbook and returns the results as a set of row-column intersections."
          },
          {
            "Member Type": "Property",
            "Name": "Workbook.description",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The description of the workbook."
          },
          {
            "Name": "Workbook.id",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The ID of the workbook.",
            "Member Type": "Property"
          },
          {
            "Name": "Workbook.name",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Server scripts",
            "Description": "The name of the workbook.",
            "Member Type": "Property"
          },
          {
            "Name": "Workbook.pivots",
            "Return Type / Value Type": "workbook.Pivot[]",
            "Supported Script Types": "Server scripts",
            "Description": "The pivots in the workbook.",
            "Member Type": "Property"
          },
          {
            "Name": "Workbook.tables",
            "Return Type / Value Type": "workbook.Table[]",
            "Supported Script Types": "Server scripts",
            "Description": "The tables in the workbook.",
            "Member Type": "Property"
          }
        ]
      }
    ]
  ],
  ["N/workflow", []],
  [
    "N/xml",
    [
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      },
      {
        "Name": "In ",
        "Table": [
          {
            "Member Type": "Object",
            "Name": "xml.Attr",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an attribute node of an xml.Element object."
          },
          {
            "Name": "xml.Document",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an entire XML document. The XML DOM presents a document as a hierarchy of node objects. Use the methods and properties available to the xml.Document object to manipulate the XML document and the nodes in the document tree.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Element",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents an element in an XML document. Elements may contain attributes, other elements, or text. If an element contains text, the text is represented in a text node of type TEXT_NODE.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Node",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Represents a generic XML node in an XML document. A node can be a Document, Element, or Attribute.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.Parser",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to parse XML.",
            "Member Type": "Object"
          },
          {
            "Name": "xml.XPath",
            "Return Type / Value Type": "Object",
            "Supported Script Types": "Client and server scripts",
            "Description": "Encapsulates the functionality used by NetSuite to run XPath expressions.\n                  XPath is a standard for enumerating paths in an XML document collection.",
            "Member Type": "Object"
          },
          {
            "Member Type": "Method",
            "Name": "xml.escape(options)",
            "Return Type / Value Type": "string",
            "Supported Script Types": "Client and server scripts",
            "Description": "Prepares a string for use in XML by escaping XML markup, such as angle brackets, quotation marks, and ampersands."
          },
          {
            "Name": "xml.validate(options)",
            "Return Type / Value Type": "void",
            "Supported Script Types": "Server scripts",
            "Description": "Validates an XML document against an XML Schema (XSD).",
            "Member Type": "Method"
          },
          {
            "Member Type": "Enum",
            "Name": "xml.NodeType",
            "Return Type / Value Type": "string (read-only)",
            "Supported Script Types": "Client and server scripts",
            "Description": "Holds the string values for the supported node types. Use this enum to set the Node.nodeType property."
          }
        ]
      }
    ]
  ]
]

